[
  {
    "line": 2,
    "elements": [
      {
        "line": 15,
        "name": "Store one request and make same request after reboot",
        "description": "",
        "id": "request-are-stored-in-the-brain-file-when-terminating-mimicservice;store-one-request-and-make-same-request-after-reboot;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4100738333,
              "status": "passed"
            },
            "line": 6,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1016722901,
              "status": "passed"
            },
            "line": 7,
            "name": "that no requests are stored",
            "match": {
              "location": "MimicStepDef.that_no_requests_are_stored()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1091037237,
              "status": "passed"
            },
            "line": 8,
            "name": "I teach the mock that \"1+1\" has response \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 23
                },
                {
                  "val": "1",
                  "offset": 42
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1783906849,
              "status": "passed"
            },
            "line": 9,
            "name": "I terminate the mimicService",
            "match": {
              "location": "MimicStepDef.i_terminate_mimicService()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 39545510,
              "status": "passed"
            },
            "line": 10,
            "name": "I start mimicService",
            "match": {
              "location": "MimicStepDef.i_start_mimicService()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 644575060,
              "status": "passed"
            },
            "line": 11,
            "name": "\"1+1\" respondes with \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 1
                },
                {
                  "val": "1",
                  "offset": 22
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@StoreInBrainFile111"
          },
          {
            "line": 1,
            "name": "@BrainFile"
          }
        ]
      },
      {
        "line": 18,
        "name": "Store multiple requests and make same requests after reboot",
        "description": "",
        "id": "request-are-stored-in-the-brain-file-when-terminating-mimicservice;store-multiple-requests-and-make-same-requests-after-reboot",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2421655030,
              "status": "passed"
            },
            "line": 19,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1009875912,
              "status": "passed"
            },
            "line": 20,
            "name": "that no requests are stored",
            "match": {
              "location": "MimicStepDef.that_no_requests_are_stored()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4357018809,
              "status": "passed"
            },
            "line": 21,
            "name": "I teach the mock the below questions and responses",
            "match": {
              "location": "MimicStepDef.i_teach_the_mock_multiple_questions_with_responses(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "question",
                  "response"
                ],
                "line": 22
              },
              {
                "cells": [
                  "\"2+2\"",
                  "\"4\""
                ],
                "line": 23
              },
              {
                "cells": [
                  "\"3+3\"",
                  "\"6\""
                ],
                "line": 24
              },
              {
                "cells": [
                  "\"4+4\"",
                  "\"8\""
                ],
                "line": 25
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2105451819,
              "status": "passed"
            },
            "line": 26,
            "name": "I terminate the mimicService",
            "match": {
              "location": "MimicStepDef.i_terminate_mimicService()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 56555668,
              "status": "passed"
            },
            "line": 27,
            "name": "I start mimicService",
            "match": {
              "location": "MimicStepDef.i_start_mimicService()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1179291771,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[\"4\"]\u003e but was:\u003c[Paste or type json, xml, html or text response to learn and press Learn\u003cbr\u003e\u003cbr\u003e\u003cform action\u003d\"/learnresponse\" method\u003d\"post\"\u003e\u003cselect name\u003d\u0027mime\u0027\u003e\u003coption value\u003d\u0027auto\u0027\u003eAuto\u003c/option\u003e\u003coption value\u003d\u0027application/json\u0027\u003eJSON\u003c/option\u003e\u003coption value\u003d\u0027application/xml\u0027\u003eXML\u003c/option\u003e\u003coption value\u003d\u0027text/html\u0027\u003eHTML\u003c/option\u003e\u003coption value\u003d\u0027text/plain\u0027\u003eText\u003c/option\u003e\u003c/select\u003e\u003cbr\u003e\u003ctextarea name\u003d\u0027text\u0027 rows\u003d\u002730\u0027 cols\u003d\u0027150\u0027\u003e\u003c/textarea\u003e\u003cbr\u003e\u003cbr\u003e\u003cinput type\u003d\"submit\" id\u003d\u0027learn\u0027 value\u003d\"Learn\"\u003e\u003c/form\u003e]\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat se.iths.stepDefs.MimicStepDef.every_question_respondes_with_correct_response(MimicStepDef.java:128)\r\n\tat âœ½.Then every question below respondes with corresponding response(se/iths/testAPI/BrainFile.feature:28)\r\n",
              "status": "failed"
            },
            "line": 28,
            "name": "every question below respondes with corresponding response",
            "match": {
              "location": "MimicStepDef.every_question_respondes_with_correct_response(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "question",
                  "response"
                ],
                "line": 29
              },
              {
                "cells": [
                  "\"2+2\"",
                  "\"4\""
                ],
                "line": 30
              },
              {
                "cells": [
                  "\"3+3\"",
                  "\"6\""
                ],
                "line": 31
              },
              {
                "cells": [
                  "\"4+4\"",
                  "\"8\""
                ],
                "line": 32
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 17,
            "name": "@StoreInBrainFile112"
          }
        ]
      }
    ],
    "name": "Request are stored in the Brain file when terminating mimicService",
    "description": "",
    "id": "request-are-stored-in-the-brain-file-when-terminating-mimicservice",
    "keyword": "Feature",
    "uri": "se/iths/testAPI/BrainFile.feature",
    "tags": [
      {
        "line": 1,
        "name": "@BrainFile"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "KillMimic terminates the service",
        "description": "",
        "id": "killmimic-terminates-the-service;killmimic-terminates-the-service",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2976691926,
              "status": "passed"
            },
            "line": 6,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2079667585,
              "status": "passed"
            },
            "line": 7,
            "name": "I terminate the mimicService",
            "match": {
              "location": "MimicStepDef.i_terminate_mimicService()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1100792092,
              "status": "passed"
            },
            "line": 8,
            "name": "\"1+1\" respondes with \"Error\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 1
                },
                {
                  "val": "Error",
                  "offset": 22
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@KillMimic111"
          }
        ]
      }
    ],
    "name": "KillMimic terminates the service",
    "description": "",
    "id": "killmimic-terminates-the-service",
    "keyword": "Feature",
    "uri": "se/iths/testAPI/KillMimic.feature",
    "tags": [
      {
        "line": 1,
        "name": "@KillMimic"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "#Replaced 112 with 113 test case"
          }
        ],
        "line": 7,
        "name": "LearnNextResponse adds a response to a request",
        "description": "",
        "id": "learnnextresponse-adds-states/responses-to-a-request;learnnextresponse-adds-a-response-to-a-request",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2770550197,
              "status": "passed"
            },
            "line": 8,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17711887,
              "status": "passed"
            },
            "line": 9,
            "name": "I teach the mock that \"1+1\" has response \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 23
                },
                {
                  "val": "2",
                  "offset": 42
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 105021754,
              "status": "passed"
            },
            "line": 10,
            "name": "\"1+1\" respondes with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 1
                },
                {
                  "val": "2",
                  "offset": 22
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 6,
            "name": "@LearnNextResponse111"
          }
        ]
      },
      {
        "line": 13,
        "name": "Store sequense with LearnNextResponse and check that all",
        "description": "\t\t  states are stored after reset",
        "id": "learnnextresponse-adds-states/responses-to-a-request;store-sequense-with-learnnextresponse-and-check-that-all",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2737974375,
              "status": "passed"
            },
            "line": 15,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12534276,
              "status": "passed"
            },
            "line": 16,
            "name": "that no requests are stored",
            "match": {
              "location": "MimicStepDef.that_no_requests_are_stored()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1681142940,
              "status": "passed"
            },
            "line": 17,
            "name": "I teach the mock the below sequense",
            "match": {
              "location": "MimicStepDef.i_teach_the_mock_the_bellow_sequense(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "question",
                  "response"
                ],
                "line": 18
              },
              {
                "cells": [
                  "1+1",
                  "2"
                ],
                "line": 19
              },
              {
                "cells": [
                  "1+1",
                  "3"
                ],
                "line": 20
              },
              {
                "cells": [
                  "1+1",
                  "4"
                ],
                "line": 21
              },
              {
                "cells": [
                  "1+1",
                  "5"
                ],
                "line": 22
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 513545422,
              "status": "passed"
            },
            "line": 23,
            "name": "I call resetState",
            "match": {
              "location": "MimicStepDef.i_call_resetState()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 831859566,
              "status": "passed"
            },
            "line": 24,
            "name": "every step in the stored sequense respondes with the stored response as below",
            "match": {
              "location": "MimicStepDef.every_step_in_the_stored_sequense_respondes_with_the_correct_response_as_bellow(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "question",
                  "response"
                ],
                "line": 25
              },
              {
                "cells": [
                  "1+1",
                  "2"
                ],
                "line": 26
              },
              {
                "cells": [
                  "1+1",
                  "3"
                ],
                "line": 27
              },
              {
                "cells": [
                  "1+1",
                  "4"
                ],
                "line": 28
              },
              {
                "cells": [
                  "1+1",
                  "5"
                ],
                "line": 29
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 12,
            "name": "@LearnNextResponse112"
          }
        ]
      },
      {
        "line": 40,
        "name": "You can store requests with forward slash sign",
        "description": "",
        "id": "learnnextresponse-adds-states/responses-to-a-request;you-can-store-requests-with-forward-slash-sign;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2759796506,
              "status": "passed"
            },
            "line": 34,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 31367289,
              "status": "passed"
            },
            "line": 35,
            "name": "I teach the mock that \"test/test\" has response \"test\"",
            "match": {
              "arguments": [
                {
                  "val": "test/test",
                  "offset": 23
                },
                {
                  "val": "test",
                  "offset": 48
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 104330284,
              "status": "passed"
            },
            "line": 36,
            "name": "\"test/test\" respondes with \"test\"",
            "match": {
              "arguments": [
                {
                  "val": "test/test",
                  "offset": 1
                },
                {
                  "val": "test",
                  "offset": 28
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@LearnNextResponse"
          },
          {
            "line": 32,
            "name": "@LearnNextResponse113"
          }
        ]
      },
      {
        "line": 41,
        "name": "You can store requests with forward slash sign",
        "description": "",
        "id": "learnnextresponse-adds-states/responses-to-a-request;you-can-store-requests-with-forward-slash-sign;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2733609292,
              "status": "passed"
            },
            "line": 34,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16168493,
              "status": "passed"
            },
            "line": 35,
            "name": "I teach the mock that \"te/te/te\" has response \"test\"",
            "match": {
              "arguments": [
                {
                  "val": "te/te/te",
                  "offset": 23
                },
                {
                  "val": "test",
                  "offset": 47
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 107931673,
              "status": "passed"
            },
            "line": 36,
            "name": "\"te/te/te\" respondes with \"test\"",
            "match": {
              "arguments": [
                {
                  "val": "te/te/te",
                  "offset": 1
                },
                {
                  "val": "test",
                  "offset": 27
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@LearnNextResponse"
          },
          {
            "line": 32,
            "name": "@LearnNextResponse113"
          }
        ]
      }
    ],
    "name": "LearnNextResponse adds states/responses to a request",
    "description": "",
    "id": "learnnextresponse-adds-states/responses-to-a-request",
    "keyword": "Feature",
    "uri": "se/iths/testAPI/LearnNextResponse.feature",
    "tags": [
      {
        "line": 1,
        "name": "@LearnNextResponse"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 14,
        "name": "Learn how to calculate add, sub, mult and div with one digit values",
        "description": "",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;learn-how-to-calculate-add,-sub,-mult-and-div-with-one-digit-values;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2754172415,
              "status": "passed"
            },
            "line": 7,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2078126654,
              "status": "passed"
            },
            "line": 8,
            "name": "I teach the mock that \"add?value1\u003d1\u0026value2\u003d1\" has response \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d1",
                  "offset": 23
                },
                {
                  "val": "2",
                  "offset": 60
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18364783,
              "status": "passed"
            },
            "line": 9,
            "name": "I teach the mock that \"add?value1\u003d1\u0026value2\u003d2\" has response \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d2",
                  "offset": 23
                },
                {
                  "val": "3",
                  "offset": 60
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91641710,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[4]\u003e but was:\u003c[Paste or type json, xml, html or text response to learn and press Learn\u003cbr\u003e\u003cbr\u003e\u003cform action\u003d\"/learnresponse\" method\u003d\"post\"\u003e\u003cselect name\u003d\u0027mime\u0027\u003e\u003coption value\u003d\u0027auto\u0027\u003eAuto\u003c/option\u003e\u003coption value\u003d\u0027application/json\u0027\u003eJSON\u003c/option\u003e\u003coption value\u003d\u0027application/xml\u0027\u003eXML\u003c/option\u003e\u003coption value\u003d\u0027text/html\u0027\u003eHTML\u003c/option\u003e\u003coption value\u003d\u0027text/plain\u0027\u003eText\u003c/option\u003e\u003c/select\u003e\u003cbr\u003e\u003ctextarea name\u003d\u0027text\u0027 rows\u003d\u002730\u0027 cols\u003d\u0027150\u0027\u003e\u003c/textarea\u003e\u003cbr\u003e\u003cbr\u003e\u003cinput type\u003d\"submit\" id\u003d\u0027learn\u0027 value\u003d\"Learn\"\u003e\u003c/form\u003e]\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat se.iths.stepDefs.MimicStepDef.respondes_with(MimicStepDef.java:73)\r\n\tat âœ½.Then \"add?value1\u003d1\u0026value2\u003d3\" respondes with \"4\"(se/iths/testAPI/MachineLearning.feature:10)\r\n",
              "status": "failed"
            },
            "line": 10,
            "name": "\"add?value1\u003d1\u0026value2\u003d3\" respondes with \"4\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d3",
                  "offset": 1
                },
                {
                  "val": "4",
                  "offset": 40
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              4,
              5
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@MachineLearning"
          },
          {
            "line": 5,
            "name": "@MachineLearning111"
          }
        ]
      },
      {
        "line": 15,
        "name": "Learn how to calculate add, sub, mult and div with one digit values",
        "description": "",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;learn-how-to-calculate-add,-sub,-mult-and-div-with-one-digit-values;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3375269920,
              "status": "passed"
            },
            "line": 7,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 27154042,
              "status": "passed"
            },
            "line": 8,
            "name": "I teach the mock that \"sub?value1\u003d5\u0026value2\u003d1\" has response \"4\"",
            "match": {
              "arguments": [
                {
                  "val": "sub?value1\u003d5\u0026value2\u003d1",
                  "offset": 23
                },
                {
                  "val": "4",
                  "offset": 60
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 37135008,
              "status": "passed"
            },
            "line": 9,
            "name": "I teach the mock that \"sub?value1\u003d5\u0026value2\u003d2\" has response \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "sub?value1\u003d5\u0026value2\u003d2",
                  "offset": 23
                },
                {
                  "val": "3",
                  "offset": 60
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 154271232,
              "status": "passed"
            },
            "line": 10,
            "name": "\"sub?value1\u003d5\u0026value2\u003d3\" respondes with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "sub?value1\u003d5\u0026value2\u003d3",
                  "offset": 1
                },
                {
                  "val": "2",
                  "offset": 40
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              4,
              5
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@MachineLearning"
          },
          {
            "line": 5,
            "name": "@MachineLearning111"
          }
        ]
      },
      {
        "line": 16,
        "name": "Learn how to calculate add, sub, mult and div with one digit values",
        "description": "",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;learn-how-to-calculate-add,-sub,-mult-and-div-with-one-digit-values;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2745481235,
              "status": "passed"
            },
            "line": 7,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21642391,
              "status": "passed"
            },
            "line": 8,
            "name": "I teach the mock that \"mult?value1\u003d3\u0026value2\u003d2\" has response \"6\"",
            "match": {
              "arguments": [
                {
                  "val": "mult?value1\u003d3\u0026value2\u003d2",
                  "offset": 23
                },
                {
                  "val": "6",
                  "offset": 61
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 29073332,
              "status": "passed"
            },
            "line": 9,
            "name": "I teach the mock that \"mult?value1\u003d3\u0026value2\u003d3\" has response \"9\"",
            "match": {
              "arguments": [
                {
                  "val": "mult?value1\u003d3\u0026value2\u003d3",
                  "offset": 23
                },
                {
                  "val": "9",
                  "offset": 61
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 144003417,
              "status": "passed"
            },
            "line": 10,
            "name": "\"mult?value1\u003d3\u0026value2\u003d4\" respondes with \"12\"",
            "match": {
              "arguments": [
                {
                  "val": "mult?value1\u003d3\u0026value2\u003d4",
                  "offset": 1
                },
                {
                  "val": "12",
                  "offset": 41
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              4,
              5
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@MachineLearning"
          },
          {
            "line": 5,
            "name": "@MachineLearning111"
          }
        ]
      },
      {
        "line": 17,
        "name": "Learn how to calculate add, sub, mult and div with one digit values",
        "description": "",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;learn-how-to-calculate-add,-sub,-mult-and-div-with-one-digit-values;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2781859524,
              "status": "passed"
            },
            "line": 7,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18238389,
              "status": "passed"
            },
            "line": 8,
            "name": "I teach the mock that \"div?value1\u003d4\u0026value2\u003d2\" has response \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "div?value1\u003d4\u0026value2\u003d2",
                  "offset": 23
                },
                {
                  "val": "2",
                  "offset": 60
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 29044196,
              "status": "passed"
            },
            "line": 9,
            "name": "I teach the mock that \"div?value1\u003d60\u0026value2\u003d20\" has response \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "div?value1\u003d60\u0026value2\u003d20",
                  "offset": 23
                },
                {
                  "val": "3",
                  "offset": 62
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 137108827,
              "status": "passed"
            },
            "line": 10,
            "name": "\"div?value1\u003d8\u0026value2\u003d4\" respondes with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "div?value1\u003d8\u0026value2\u003d4",
                  "offset": 1
                },
                {
                  "val": "2",
                  "offset": 40
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              4,
              5
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@MachineLearning"
          },
          {
            "line": 5,
            "name": "@MachineLearning111"
          }
        ]
      },
      {
        "line": 29,
        "name": "Learn how to calculate when teaching with values",
        "description": "\t\t\t\t\t\t\tending with the same digit.",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;learn-how-to-calculate-when-teaching-with-values;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2795178835,
              "status": "passed"
            },
            "line": 22,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2012620454,
              "status": "passed"
            },
            "line": 23,
            "name": "I teach the mock that \"add?value1\u003d10\u0026value2\u003d20\" has response \"30\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d10\u0026value2\u003d20",
                  "offset": 23
                },
                {
                  "val": "30",
                  "offset": 62
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 22229627,
              "status": "passed"
            },
            "line": 24,
            "name": "I teach the mock that \"add?value1\u003d20\u0026value2\u003d20\" has response \"40\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d20\u0026value2\u003d20",
                  "offset": 23
                },
                {
                  "val": "40",
                  "offset": 62
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 105118600,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[3]\u003e but was:\u003c[Paste or type json, xml, html or text response to learn and press Learn\u003cbr\u003e\u003cbr\u003e\u003cform action\u003d\"/learnresponse\" method\u003d\"post\"\u003e\u003cselect name\u003d\u0027mime\u0027\u003e\u003coption value\u003d\u0027auto\u0027\u003eAuto\u003c/option\u003e\u003coption value\u003d\u0027application/json\u0027\u003eJSON\u003c/option\u003e\u003coption value\u003d\u0027application/xml\u0027\u003eXML\u003c/option\u003e\u003coption value\u003d\u0027text/html\u0027\u003eHTML\u003c/option\u003e\u003coption value\u003d\u0027text/plain\u0027\u003eText\u003c/option\u003e\u003c/select\u003e\u003cbr\u003e\u003ctextarea name\u003d\u0027text\u0027 rows\u003d\u002730\u0027 cols\u003d\u0027150\u0027\u003e\u003c/textarea\u003e\u003cbr\u003e\u003cbr\u003e\u003cinput type\u003d\"submit\" id\u003d\u0027learn\u0027 value\u003d\"Learn\"\u003e\u003c/form\u003e]\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat se.iths.stepDefs.MimicStepDef.respondes_with(MimicStepDef.java:73)\r\n\tat âœ½.Then \"add?value1\u003d1\u0026value2\u003d2\" respondes with \"3\"(se/iths/testAPI/MachineLearning.feature:25)\r\n",
              "status": "failed"
            },
            "line": 25,
            "name": "\"add?value1\u003d1\u0026value2\u003d2\" respondes with \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d2",
                  "offset": 1
                },
                {
                  "val": "3",
                  "offset": 40
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              4,
              5
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@MachineLearning"
          },
          {
            "line": 19,
            "name": "@MachineLearning112"
          }
        ]
      },
      {
        "line": 30,
        "name": "Learn how to calculate when teaching with values",
        "description": "\t\t\t\t\t\t\tending with the same digit.",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;learn-how-to-calculate-when-teaching-with-values;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3297903266,
              "status": "passed"
            },
            "line": 22,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15781927,
              "status": "passed"
            },
            "line": 23,
            "name": "I teach the mock that \"add?value1\u003d15\u0026value2\u003d15\" has response \"30\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d15\u0026value2\u003d15",
                  "offset": 23
                },
                {
                  "val": "30",
                  "offset": 62
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8808546,
              "status": "passed"
            },
            "line": 24,
            "name": "I teach the mock that \"add?value1\u003d25\u0026value2\u003d25\" has response \"50\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d25\u0026value2\u003d25",
                  "offset": 23
                },
                {
                  "val": "50",
                  "offset": 62
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 120513140,
              "status": "passed"
            },
            "line": 25,
            "name": "\"add?value1\u003d1\u0026value2\u003d1\" respondes with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d1",
                  "offset": 1
                },
                {
                  "val": "2",
                  "offset": 40
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              4,
              5
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@MachineLearning"
          },
          {
            "line": 19,
            "name": "@MachineLearning112"
          }
        ]
      },
      {
        "line": 31,
        "name": "Learn how to calculate when teaching with values",
        "description": "\t\t\t\t\t\t\tending with the same digit.",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;learn-how-to-calculate-when-teaching-with-values;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2839650809,
              "status": "passed"
            },
            "line": 22,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36493604,
              "status": "passed"
            },
            "line": 23,
            "name": "I teach the mock that \"add?value1\u003d26\u0026value2\u003d16\" has response \"42\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d26\u0026value2\u003d16",
                  "offset": 23
                },
                {
                  "val": "42",
                  "offset": 62
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 19359515,
              "status": "passed"
            },
            "line": 24,
            "name": "I teach the mock that \"add?value1\u003d36\u0026value2\u003d46\" has response \"82\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d36\u0026value2\u003d46",
                  "offset": 23
                },
                {
                  "val": "82",
                  "offset": 62
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 146576014,
              "status": "passed"
            },
            "line": 25,
            "name": "\"add?value1\u003d1\u0026value2\u003d1\" respondes with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d1",
                  "offset": 1
                },
                {
                  "val": "2",
                  "offset": 40
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              4,
              5
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@MachineLearning"
          },
          {
            "line": 19,
            "name": "@MachineLearning112"
          }
        ]
      },
      {
        "line": 32,
        "name": "Learn how to calculate when teaching with values",
        "description": "\t\t\t\t\t\t\tending with the same digit.",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;learn-how-to-calculate-when-teaching-with-values;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2857290883,
              "status": "passed"
            },
            "line": 22,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 33336644,
              "status": "passed"
            },
            "line": 23,
            "name": "I teach the mock that \"add?value1\u003d111\u0026value2\u003d111\" has response \"222\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d111\u0026value2\u003d111",
                  "offset": 23
                },
                {
                  "val": "222",
                  "offset": 64
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12790755,
              "status": "passed"
            },
            "line": 24,
            "name": "I teach the mock that \"add?value1\u003d222\u0026value2\u003d222\" has response \"444\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d222\u0026value2\u003d222",
                  "offset": 23
                },
                {
                  "val": "444",
                  "offset": 64
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 142302032,
              "status": "passed"
            },
            "line": 25,
            "name": "\"add?value1\u003d1\u0026value2\u003d1\" respondes with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d1",
                  "offset": 1
                },
                {
                  "val": "2",
                  "offset": 40
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              4,
              5
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@MachineLearning"
          },
          {
            "line": 19,
            "name": "@MachineLearning112"
          }
        ]
      },
      {
        "line": 36,
        "name": "Calling with format \"/text?param\"",
        "description": "",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;calling-with-format-\"/text?param\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2500426782,
              "status": "passed"
            },
            "line": 37,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1112281161,
              "status": "passed"
            },
            "line": 38,
            "name": "I make the request \"test?ett\"",
            "match": {
              "arguments": [
                {
                  "val": "test?ett",
                  "offset": 20
                }
              ],
              "location": "MimicStepDef.i_make_the_request(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1109570681,
              "status": "passed"
            },
            "line": 39,
            "name": "\"test?ett\" returns the response form",
            "match": {
              "arguments": [
                {
                  "val": "test?ett",
                  "offset": 1
                }
              ],
              "location": "MimicStepDef.returns_the_response_form(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 35,
            "name": "@MachineLearning113"
          }
        ]
      },
      {
        "line": 42,
        "name": "Learn how to calculate add while alternating with mult",
        "description": "",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;learn-how-to-calculate-add-while-alternating-with-mult",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3454720420,
              "status": "passed"
            },
            "line": 43,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 41240328,
              "status": "passed"
            },
            "line": 44,
            "name": "I teach the mock that \"add?value1\u003d1\u0026value2\u003d2\" has response \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d2",
                  "offset": 23
                },
                {
                  "val": "3",
                  "offset": 60
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 140352785,
              "status": "passed"
            },
            "line": 45,
            "name": "I teach the mock that \"mult?value1\u003d3\u0026value2\u003d2\" has response \"6\"",
            "match": {
              "arguments": [
                {
                  "val": "mult?value1\u003d3\u0026value2\u003d2",
                  "offset": 23
                },
                {
                  "val": "6",
                  "offset": 61
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 42966335,
              "status": "passed"
            },
            "line": 46,
            "name": "I teach the mock that \"add?value1\u003d1\u0026value2\u003d1\" has response \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d1",
                  "offset": 23
                },
                {
                  "val": "2",
                  "offset": 60
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 137085026,
              "status": "passed"
            },
            "line": 47,
            "name": "\"add?value1\u003d1\u0026value2\u003d3\" respondes with \"4\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d3",
                  "offset": 1
                },
                {
                  "val": "4",
                  "offset": 40
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 41,
            "name": "@MachineLearning114"
          }
        ]
      },
      {
        "line": 50,
        "name": "UnlearnAllResponses removes all learned formats",
        "description": "",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;unlearnallresponses-removes-all-learned-formats",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4046341611,
              "status": "passed"
            },
            "line": 51,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 66088103,
              "status": "passed"
            },
            "line": 52,
            "name": "that the mock has learned \"add?value1\u003d1\u0026value2\u003d2\" with \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d2",
                  "offset": 27
                },
                {
                  "val": "3",
                  "offset": 56
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30945840,
              "status": "passed"
            },
            "line": 53,
            "name": "that the mock has learned \"add?value1\u003d1\u0026value2\u003d1\" with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d1",
                  "offset": 27
                },
                {
                  "val": "2",
                  "offset": 56
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 158782405,
              "status": "passed"
            },
            "line": 54,
            "name": "\"add?value1\u003d1\u0026value2\u003d3\" respondes with \"4\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d3",
                  "offset": 1
                },
                {
                  "val": "4",
                  "offset": 40
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16932188,
              "status": "passed"
            },
            "line": 55,
            "name": "I write unlearnAllResponses in url",
            "match": {
              "location": "MimicStepDef.i_write_unlearnAll_in_url()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 124877813,
              "status": "passed"
            },
            "line": 56,
            "name": "\"add?value1\u003d1\u0026value2\u003d3\" returns the response form",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d3",
                  "offset": 1
                }
              ],
              "location": "MimicStepDef.returns_the_response_form(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 49,
            "name": "@MachineLearning115"
          }
        ]
      },
      {
        "line": 59,
        "name": "Terminating Mimic does not remove learned formats",
        "description": "",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;terminating-mimic-does-not-remove-learned-formats",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3536782913,
              "status": "passed"
            },
            "line": 60,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17757849,
              "status": "passed"
            },
            "line": 61,
            "name": "that the mock has learned \"add?value1\u003d1\u0026value2\u003d2\" with \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d2",
                  "offset": 27
                },
                {
                  "val": "3",
                  "offset": 56
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17962622,
              "status": "passed"
            },
            "line": 62,
            "name": "that the mock has learned \"add?value1\u003d1\u0026value2\u003d1\" with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d1",
                  "offset": 27
                },
                {
                  "val": "2",
                  "offset": 56
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 150882824,
              "status": "passed"
            },
            "line": 63,
            "name": "\"add?value1\u003d1\u0026value2\u003d3\" respondes with \"4\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d3",
                  "offset": 1
                },
                {
                  "val": "4",
                  "offset": 40
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1998090148,
              "status": "passed"
            },
            "line": 64,
            "name": "I terminate the mimicService",
            "match": {
              "location": "MimicStepDef.i_terminate_mimicService()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 57728909,
              "status": "passed"
            },
            "line": 65,
            "name": "I start mimicService",
            "match": {
              "location": "MimicStepDef.i_start_mimicService()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 806123345,
              "status": "passed"
            },
            "line": 66,
            "name": "\"add?value1\u003d1\u0026value2\u003d3\" respondes with \"4\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d3",
                  "offset": 1
                },
                {
                  "val": "4",
                  "offset": 40
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 58,
            "name": "@AutoLearn116"
          }
        ]
      },
      {
        "line": 79,
        "name": "Correcting a request does not affect learned formats",
        "description": "",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;correcting-a-request-does-not-affect-learned-formats;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2732017475,
              "status": "passed"
            },
            "line": 70,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 31168671,
              "status": "passed"
            },
            "line": 71,
            "name": "I teach the mock that \"add?value1\u003d10\u0026value2\u003d10\" has response \"20\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d10\u0026value2\u003d10",
                  "offset": 23
                },
                {
                  "val": "20",
                  "offset": 62
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9756496,
              "status": "passed"
            },
            "line": 72,
            "name": "I teach the mock that \"add?value1\u003d20\u0026value2\u003d20\" has response \"40\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d20\u0026value2\u003d20",
                  "offset": 23
                },
                {
                  "val": "40",
                  "offset": 62
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 126513950,
              "status": "passed"
            },
            "line": 73,
            "name": "\"add?value1\u003d1\u0026value2\u003d2\" does not responde with \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d2",
                  "offset": 1
                },
                {
                  "val": "3",
                  "offset": 48
                }
              ],
              "location": "MimicStepDef.does_not_responde_with(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16476680,
              "status": "passed"
            },
            "line": 74,
            "name": "I teach the mock that \"add?value1\u003d1\u0026value2\u003d2\" has response \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d2",
                  "offset": 23
                },
                {
                  "val": "3",
                  "offset": 60
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2713130295,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[4]\u003e but was:\u003c[Paste or type json, xml, html or text response to learn and press Learn\u003cbr\u003e\u003cbr\u003e\u003cform action\u003d\"/learnresponse\" method\u003d\"post\"\u003e\u003cselect name\u003d\u0027mime\u0027\u003e\u003coption value\u003d\u0027auto\u0027\u003eAuto\u003c/option\u003e\u003coption value\u003d\u0027application/json\u0027\u003eJSON\u003c/option\u003e\u003coption value\u003d\u0027application/xml\u0027\u003eXML\u003c/option\u003e\u003coption value\u003d\u0027text/html\u0027\u003eHTML\u003c/option\u003e\u003coption value\u003d\u0027text/plain\u0027\u003eText\u003c/option\u003e\u003c/select\u003e\u003cbr\u003e\u003ctextarea name\u003d\u0027text\u0027 rows\u003d\u002730\u0027 cols\u003d\u0027150\u0027\u003e\u003c/textarea\u003e\u003cbr\u003e\u003cbr\u003e\u003cinput type\u003d\"submit\" id\u003d\u0027learn\u0027 value\u003d\"Learn\"\u003e\u003c/form\u003e]\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat se.iths.stepDefs.MimicStepDef.respondes_with(MimicStepDef.java:73)\r\n\tat âœ½.Then \"add?value1\u003d1\u0026value2\u003d3\" respondes with \"4\"(se/iths/testAPI/MachineLearning.feature:75)\r\n",
              "status": "failed"
            },
            "line": 75,
            "name": "\"add?value1\u003d1\u0026value2\u003d3\" respondes with \"4\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d3",
                  "offset": 1
                },
                {
                  "val": "4",
                  "offset": 40
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@MachineLearning"
          },
          {
            "line": 68,
            "name": "@MachineLearning117"
          }
        ]
      },
      {
        "line": 80,
        "name": "Correcting a request does not affect learned formats",
        "description": "",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;correcting-a-request-does-not-affect-learned-formats;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3074663970,
              "status": "passed"
            },
            "line": 70,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49641790,
              "status": "passed"
            },
            "line": 71,
            "name": "I teach the mock that \"add?value1\u003d10\u0026value2\u003d20\" has response \"30\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d10\u0026value2\u003d20",
                  "offset": 23
                },
                {
                  "val": "30",
                  "offset": 62
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 31404222,
              "status": "passed"
            },
            "line": 72,
            "name": "I teach the mock that \"add?value1\u003d20\u0026value2\u003d20\" has response \"40\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d20\u0026value2\u003d20",
                  "offset": 23
                },
                {
                  "val": "40",
                  "offset": 62
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 191261791,
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:86)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat org.junit.Assert.assertFalse(Assert.java:64)\r\n\tat org.junit.Assert.assertFalse(Assert.java:74)\r\n\tat se.iths.stepDefs.MimicStepDef.does_not_responde_with(MimicStepDef.java:85)\r\n\tat âœ½.And \"add?value1\u003d1\u0026value2\u003d2\" does not responde with \"3\"(se/iths/testAPI/MachineLearning.feature:73)\r\n",
              "status": "failed"
            },
            "line": 73,
            "name": "\"add?value1\u003d1\u0026value2\u003d2\" does not responde with \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d2",
                  "offset": 1
                },
                {
                  "val": "3",
                  "offset": 48
                }
              ],
              "location": "MimicStepDef.does_not_responde_with(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 74,
            "name": "I teach the mock that \"add?value1\u003d1\u0026value2\u003d2\" has response \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d2",
                  "offset": 23
                },
                {
                  "val": "3",
                  "offset": 60
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 75,
            "name": "\"add?value1\u003d1\u0026value2\u003d3\" respondes with \"4\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d3",
                  "offset": 1
                },
                {
                  "val": "4",
                  "offset": 40
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@MachineLearning"
          },
          {
            "line": 68,
            "name": "@MachineLearning117"
          }
        ]
      },
      {
        "line": 83,
        "name": "Mimic can learn how to respond with complex responses",
        "description": "",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;mimic-can-learn-how-to-respond-with-complex-responses",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2868738504,
              "status": "passed"
            },
            "line": 84,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 43847806,
              "status": "passed"
            },
            "line": 85,
            "name": "that the mock has learned \"montlyCost?TotalCost\u003d10000\u0026Months\u003d10\" with \"{ \u0027TotalCost\u0027: 10000,\u0027MontlyCost\u0027: 1000,\u0027Months\u0027: 10;}\"",
            "match": {
              "arguments": [
                {
                  "val": "montlyCost?TotalCost\u003d10000\u0026Months\u003d10",
                  "offset": 27
                },
                {
                  "val": "{ \u0027TotalCost\u0027: 10000,\u0027MontlyCost\u0027: 1000,\u0027Months\u0027: 10;}",
                  "offset": 71
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16035945,
              "status": "passed"
            },
            "line": 86,
            "name": "that the mock has learned \"montlyCost?TotalCost\u003d20000\u0026Months\u003d10\" with \"{ \u0027TotalCost\u0027: 20000,\u0027MontlyCost\u0027: 2000,\u0027Months\u0027: 10;}\"",
            "match": {
              "arguments": [
                {
                  "val": "montlyCost?TotalCost\u003d20000\u0026Months\u003d10",
                  "offset": 27
                },
                {
                  "val": "{ \u0027TotalCost\u0027: 20000,\u0027MontlyCost\u0027: 2000,\u0027Months\u0027: 10;}",
                  "offset": 71
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 122113575,
              "status": "passed"
            },
            "line": 87,
            "name": "\"montlyCost?TotalCost\u003d30000\u0026Months\u003d10\" respondes with \"{ \u0027TotalCost\u0027: 30000,\u0027MontlyCost\u0027: 3000,\u0027Months\u0027: 10;}\"",
            "match": {
              "arguments": [
                {
                  "val": "montlyCost?TotalCost\u003d30000\u0026Months\u003d10",
                  "offset": 1
                },
                {
                  "val": "{ \u0027TotalCost\u0027: 30000,\u0027MontlyCost\u0027: 3000,\u0027Months\u0027: 10;}",
                  "offset": 55
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 82,
            "name": "@MachineLearning118"
          }
        ]
      },
      {
        "line": 98,
        "name": "Teaching Mimic wrong",
        "description": "",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;teaching-mimic-wrong;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3331195590,
              "status": "passed"
            },
            "line": 91,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 57453963,
              "status": "passed"
            },
            "line": 92,
            "name": "I teach the mock that \"add?value1\u003d10\u0026value2\u003d20\" has response \"15\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d10\u0026value2\u003d20",
                  "offset": 23
                },
                {
                  "val": "15",
                  "offset": 62
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 19948393,
              "status": "passed"
            },
            "line": 93,
            "name": "I teach the mock that \"add?value1\u003d20\u0026value2\u003d20\" has response \"30\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d20\u0026value2\u003d20",
                  "offset": 23
                },
                {
                  "val": "30",
                  "offset": 62
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 264181288,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[Paste or type json, xml, html or text response to learn and press Learn\u003cbr\u003e\u003cbr\u003e\u003cform action\u003d\"/learnresponse\" method\u003d\"post\"\u003e\u003cselect name\u003d\u0027mime\u0027\u003e\u003coption value\u003d\u0027auto\u0027\u003eAuto\u003c/option\u003e\u003coption value\u003d\u0027application/json\u0027\u003eJSON\u003c/option\u003e\u003coption value\u003d\u0027application/xml\u0027\u003eXML\u003c/option\u003e\u003coption value\u003d\u0027text/html\u0027\u003eHTML\u003c/option\u003e\u003coption value\u003d\u0027text/plain\u0027\u003eText\u003c/option\u003e\u003c/select\u003e\u003cbr\u003e\u003ctextarea name\u003d\u0027text\u0027 rows\u003d\u002730\u0027 cols\u003d\u0027150\u0027\u003e\u003c/textarea\u003e\u003cbr\u003e\u003cbr\u003e\u003cinput type\u003d\"submit\" id\u003d\u0027learn\u0027 value\u003d\"Learn\"\u003e\u003c/form\u003e]\u003e but was:\u003c[0]\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat se.iths.stepDefs.MimicStepDef.returns_the_response_form(MimicStepDef.java:44)\r\n\tat âœ½.Then \"add?value1\u003d1\u0026value2\u003d2\" returns the response form(se/iths/testAPI/MachineLearning.feature:94)\r\n",
              "status": "failed"
            },
            "line": 94,
            "name": "\"add?value1\u003d1\u0026value2\u003d2\" returns the response form",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d2",
                  "offset": 1
                }
              ],
              "location": "MimicStepDef.returns_the_response_form(String)"
            },
            "matchedColumns": [
              4
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 89,
            "name": "@MachineLearning119"
          },
          {
            "line": 1,
            "name": "@MachineLearning"
          }
        ]
      }
    ],
    "name": "As a Tester I would like the mock to learn how to respond",
    "description": "\t\tto requests that I have not defined so that I do not \r\n      have to create code for that manually (only add, mult, sub and div)",
    "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond",
    "keyword": "Feature",
    "uri": "se/iths/testAPI/MachineLearning.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MachineLearning"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 13,
        "name": "Reset with one state in the request",
        "description": "",
        "id": "as-a-tester-i-would-like-to-reset-the-state-so-that-i-can-run-a-complete-test-scenario;reset-with-one-state-in-the-request;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3794772980,
              "status": "passed"
            },
            "line": 6,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1028636290,
              "status": "passed"
            },
            "line": 7,
            "name": "that the mock has learned \"1+1\" with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 27
                },
                {
                  "val": "2",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 501554473,
              "status": "passed"
            },
            "line": 8,
            "name": "I call resetState",
            "match": {
              "location": "MimicStepDef.i_call_resetState()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 145246832,
              "status": "passed"
            },
            "line": 9,
            "name": "\"1+1\" respondes with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 1
                },
                {
                  "val": "2",
                  "offset": 22
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@ResetState"
          },
          {
            "line": 4,
            "name": "@ResetState111"
          }
        ]
      },
      {
        "line": 28,
        "name": "Reset with multiple state in the request",
        "description": "",
        "id": "as-a-tester-i-would-like-to-reset-the-state-so-that-i-can-run-a-complete-test-scenario;reset-with-multiple-state-in-the-request;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3404566902,
              "status": "passed"
            },
            "line": 19,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30072167,
              "status": "passed"
            },
            "line": 20,
            "name": "that the mock has learned \"1+1\" with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 27
                },
                {
                  "val": "2",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22543968,
              "status": "passed"
            },
            "line": 21,
            "name": "that the mock has learned \"1+1\" with \"4\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 27
                },
                {
                  "val": "4",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31206835,
              "status": "passed"
            },
            "line": 22,
            "name": "that the mock has learned \"1+1\" with \"6\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 27
                },
                {
                  "val": "6",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "matchedColumns": [
              0,
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 512793218,
              "status": "passed"
            },
            "line": 23,
            "name": "I call resetState",
            "match": {
              "location": "MimicStepDef.i_call_resetState()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 132671109,
              "status": "passed"
            },
            "line": 24,
            "name": "\"1+1\" respondes with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 1
                },
                {
                  "val": "2",
                  "offset": 22
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 17,
            "name": "@ResetState112"
          },
          {
            "line": 1,
            "name": "@ResetState"
          }
        ]
      },
      {
        "line": 42,
        "name": "Reset with multiple state with same response in the request",
        "description": "",
        "id": "as-a-tester-i-would-like-to-reset-the-state-so-that-i-can-run-a-complete-test-scenario;reset-with-multiple-state-with-same-response-in-the-request;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2817104789,
              "status": "passed"
            },
            "line": 33,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 29773830,
              "status": "passed"
            },
            "line": 34,
            "name": "that the mock has learned \"1+1\" with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 27
                },
                {
                  "val": "2",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30791542,
              "status": "passed"
            },
            "line": 35,
            "name": "that the mock has learned \"1+1\" with \"4\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 27
                },
                {
                  "val": "4",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20475305,
              "status": "passed"
            },
            "line": 36,
            "name": "that the mock has learned \"1+1\" with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 27
                },
                {
                  "val": "2",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 501654603,
              "status": "passed"
            },
            "line": 37,
            "name": "I call resetState",
            "match": {
              "location": "MimicStepDef.i_call_resetState()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 125274228,
              "status": "passed"
            },
            "line": 38,
            "name": "\"1+1\" respondes with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 1
                },
                {
                  "val": "2",
                  "offset": 22
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 31,
            "name": "@ResetState113"
          },
          {
            "line": 1,
            "name": "@ResetState"
          }
        ]
      }
    ],
    "name": "As a Tester I would like to reset the state so that I can run a complete test scenario",
    "description": "",
    "id": "as-a-tester-i-would-like-to-reset-the-state-so-that-i-can-run-a-complete-test-scenario",
    "keyword": "Feature",
    "uri": "se/iths/testAPI/ResetState.feature",
    "tags": [
      {
        "line": 1,
        "name": "@ResetState"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 15,
        "name": "Unlearn all with two request",
        "description": "",
        "id": "unlearn-all-responses-so-that-i-can-rerun-all-the-tests-without-restarting-the-service;unlearn-all-with-two-request;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2850758237,
              "status": "passed"
            },
            "line": 6,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2055819878,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[2]\u003e but was:\u003c[Paste or type json, xml, html or text response to learn and press Learn\u003cbr\u003e\u003cbr\u003e\u003cform action\u003d\"/learnresponse\" method\u003d\"post\"\u003e\u003cselect name\u003d\u0027mime\u0027\u003e\u003coption value\u003d\u0027auto\u0027\u003eAuto\u003c/option\u003e\u003coption value\u003d\u0027application/json\u0027\u003eJSON\u003c/option\u003e\u003coption value\u003d\u0027application/xml\u0027\u003eXML\u003c/option\u003e\u003coption value\u003d\u0027text/html\u0027\u003eHTML\u003c/option\u003e\u003coption value\u003d\u0027text/plain\u0027\u003eText\u003c/option\u003e\u003c/select\u003e\u003cbr\u003e\u003ctextarea name\u003d\u0027text\u0027 rows\u003d\u002730\u0027 cols\u003d\u0027150\u0027\u003e\u003c/textarea\u003e\u003cbr\u003e\u003cbr\u003e\u003cinput type\u003d\"submit\" id\u003d\u0027learn\u0027 value\u003d\"Learn\"\u003e\u003c/form\u003e]\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat se.iths.stepDefs.MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(MimicStepDef.java:33)\r\n\tat âœ½.And that the mock has learned \"1+1\" with \"2\"(se/iths/testAPI/UnlearnAllResponses.feature:7)\r\n",
              "status": "failed"
            },
            "line": 7,
            "name": "that the mock has learned \"1+1\" with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 27
                },
                {
                  "val": "2",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "that the mock has learned \"2+2\" with \"4\"",
            "match": {
              "arguments": [
                {
                  "val": "2+2",
                  "offset": 27
                },
                {
                  "val": "4",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "I write unlearnAllResponses in url",
            "match": {
              "location": "MimicStepDef.i_write_unlearnAll_in_url()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "the mock unlearns \"1+1\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 19
                }
              ],
              "location": "MimicStepDef.the_mock_unlearns_questionTwo(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "the mock unlearns \"2+2\"",
            "match": {
              "arguments": [
                {
                  "val": "2+2",
                  "offset": 19
                }
              ],
              "location": "MimicStepDef.the_mock_unlearns_questionTwo(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@UnlearnAllResponses111"
          },
          {
            "line": 1,
            "name": "@UnlearnAllResponses"
          }
        ]
      },
      {
        "line": 26,
        "name": "Unlearn all with one request",
        "description": "",
        "id": "unlearn-all-responses-so-that-i-can-rerun-all-the-tests-without-restarting-the-service;unlearn-all-with-one-request;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3252538741,
              "status": "passed"
            },
            "line": 19,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23602307,
              "status": "passed"
            },
            "line": 20,
            "name": "that the mock has learned \"1+1\" with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 27
                },
                {
                  "val": "2",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4207501,
              "status": "passed"
            },
            "line": 21,
            "name": "I write unlearnAllResponses in url",
            "match": {
              "location": "MimicStepDef.i_write_unlearnAll_in_url()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 17780829,
              "status": "passed"
            },
            "line": 22,
            "name": "the mock unlearns \"1+1\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 19
                }
              ],
              "location": "MimicStepDef.the_mock_unlearns_questionTwo(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 17,
            "name": "@UnlearnAllResponses112"
          },
          {
            "line": 1,
            "name": "@UnlearnAllResponses"
          }
        ]
      },
      {
        "line": 29,
        "name": "Unlearn all with no requests stored",
        "description": "",
        "id": "unlearn-all-responses-so-that-i-can-rerun-all-the-tests-without-restarting-the-service;unlearn-all-with-no-requests-stored",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2748938174,
              "status": "passed"
            },
            "line": 30,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11301941,
              "status": "passed"
            },
            "line": 31,
            "name": "that no requests are stored",
            "match": {
              "location": "MimicStepDef.that_no_requests_are_stored()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18869534,
              "status": "passed"
            },
            "line": 32,
            "name": "I write unlearnAllResponses in url",
            "match": {
              "location": "MimicStepDef.i_write_unlearnAll_in_url()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9264054,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[Nothing to unlearn]\u003e but was:\u003c[All responses unlearned]\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat se.iths.stepDefs.MimicStepDef.the_mock_shows_error_message(MimicStepDef.java:61)\r\n\tat âœ½.Then the mock shows error message(se/iths/testAPI/UnlearnAllResponses.feature:33)\r\n",
              "status": "failed"
            },
            "line": 33,
            "name": "the mock shows error message",
            "match": {
              "location": "MimicStepDef.the_mock_shows_error_message()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 28,
            "name": "@UnlearnAllResponses113"
          }
        ]
      }
    ],
    "name": "Unlearn all responses so that I can rerun all the tests without restarting the service",
    "description": "",
    "id": "unlearn-all-responses-so-that-i-can-rerun-all-the-tests-without-restarting-the-service",
    "keyword": "Feature",
    "uri": "se/iths/testAPI/UnlearnAllResponses.feature",
    "tags": [
      {
        "line": 1,
        "name": "@UnlearnAllResponses"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "UnlearnResponse removes the current and following states",
        "description": "",
        "id": "unlearnresponse-removes-the-current-and-the-following-states-of-the-latest-request;unlearnresponse-removes-the-current-and-following-states",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2803268416,
              "status": "passed"
            },
            "line": 6,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5516986,
              "status": "passed"
            },
            "line": 7,
            "name": "that no requests are stored",
            "match": {
              "location": "MimicStepDef.that_no_requests_are_stored()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1671136941,
              "status": "passed"
            },
            "line": 8,
            "name": "I teach the mock the below sequense",
            "match": {
              "location": "MimicStepDef.i_teach_the_mock_the_bellow_sequense(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "question",
                  "response"
                ],
                "line": 9
              },
              {
                "cells": [
                  "1+1",
                  "2"
                ],
                "line": 10
              },
              {
                "cells": [
                  "1+1",
                  "3"
                ],
                "line": 11
              },
              {
                "cells": [
                  "1+1",
                  "4"
                ],
                "line": 12
              },
              {
                "cells": [
                  "1+1",
                  "5"
                ],
                "line": 13
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 542215362,
              "status": "passed"
            },
            "line": 14,
            "name": "I call resetState",
            "match": {
              "location": "MimicStepDef.i_call_resetState()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1102756522,
              "status": "passed"
            },
            "line": 15,
            "name": "I make the request \"1+1\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 20
                }
              ],
              "location": "MimicStepDef.i_make_the_request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1105914304,
              "status": "passed"
            },
            "line": 16,
            "name": "I make the request \"1+1\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 20
                }
              ],
              "location": "MimicStepDef.i_make_the_request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 105675469,
              "status": "passed"
            },
            "line": 17,
            "name": "I make the request \"1+1\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 20
                }
              ],
              "location": "MimicStepDef.i_make_the_request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104125100,
              "status": "passed"
            },
            "line": 18,
            "name": "I call unlearnResponse",
            "match": {
              "location": "MimicStepDef.i_call_unlearn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 101619394,
              "status": "passed"
            },
            "line": 19,
            "name": "I make the request \"1+1\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 20
                }
              ],
              "location": "MimicStepDef.i_make_the_request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 122776729,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[3]\u003e but was:\u003c[Paste or type json, xml, html or text response to learn and press Learn\u003cbr\u003e\u003cbr\u003e\u003cform action\u003d\"/learnresponse\" method\u003d\"post\"\u003e\u003cselect name\u003d\u0027mime\u0027\u003e\u003coption value\u003d\u0027auto\u0027\u003eAuto\u003c/option\u003e\u003coption value\u003d\u0027application/json\u0027\u003eJSON\u003c/option\u003e\u003coption value\u003d\u0027application/xml\u0027\u003eXML\u003c/option\u003e\u003coption value\u003d\u0027text/html\u0027\u003eHTML\u003c/option\u003e\u003coption value\u003d\u0027text/plain\u0027\u003eText\u003c/option\u003e\u003c/select\u003e\u003cbr\u003e\u003ctextarea name\u003d\u0027text\u0027 rows\u003d\u002730\u0027 cols\u003d\u0027150\u0027\u003e\u003c/textarea\u003e\u003cbr\u003e\u003cbr\u003e\u003cinput type\u003d\"submit\" id\u003d\u0027learn\u0027 value\u003d\"Learn\"\u003e\u003c/form\u003e]\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat se.iths.stepDefs.MimicStepDef.respondes_with(MimicStepDef.java:73)\r\n\tat âœ½.Then \"1+1\" respondes with \"3\"(se/iths/testAPI/UnlearnResponse.feature:20)\r\n",
              "status": "failed"
            },
            "line": 20,
            "name": "\"1+1\" respondes with \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 1
                },
                {
                  "val": "3",
                  "offset": 22
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@UnlearnResponse111"
          }
        ]
      },
      {
        "line": 23,
        "name": "Unlearn question with one state",
        "description": "",
        "id": "unlearnresponse-removes-the-current-and-the-following-states-of-the-latest-request;unlearn-question-with-one-state",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3325368366,
              "status": "passed"
            },
            "line": 24,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 66708578,
              "status": "passed"
            },
            "line": 25,
            "name": "that the mock has learned \"1+1\" with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 27
                },
                {
                  "val": "2",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 112349692,
              "status": "passed"
            },
            "line": 26,
            "name": "I call unlearnResponse",
            "match": {
              "location": "MimicStepDef.i_call_unlearn()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 118099357,
              "status": "passed"
            },
            "line": 27,
            "name": "\"1+1\" returns the response form",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 1
                }
              ],
              "location": "MimicStepDef.returns_the_response_form(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 22,
            "name": "@UnlearnResponse112"
          }
        ]
      },
      {
        "line": 30,
        "name": "UnlearnResponse does not affect other stored responses",
        "description": "",
        "id": "unlearnresponse-removes-the-current-and-the-following-states-of-the-latest-request;unlearnresponse-does-not-affect-other-stored-responses",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2775939558,
              "status": "passed"
            },
            "line": 31,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 37138292,
              "status": "passed"
            },
            "line": 32,
            "name": "I teach the mock that \"1+1\" has response \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 23
                },
                {
                  "val": "2",
                  "offset": 42
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15385512,
              "status": "passed"
            },
            "line": 33,
            "name": "I teach the mock that \"2+2\" has response \"4\"",
            "match": {
              "arguments": [
                {
                  "val": "2+2",
                  "offset": 23
                },
                {
                  "val": "4",
                  "offset": 42
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40462272,
              "status": "passed"
            },
            "line": 34,
            "name": "I teach the mock that \"3+3\" has response \"6\"",
            "match": {
              "arguments": [
                {
                  "val": "3+3",
                  "offset": 23
                },
                {
                  "val": "6",
                  "offset": 42
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 108923121,
              "status": "passed"
            },
            "line": 35,
            "name": "I make the request \"2+2\"",
            "match": {
              "arguments": [
                {
                  "val": "2+2",
                  "offset": 20
                }
              ],
              "location": "MimicStepDef.i_make_the_request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 119534413,
              "status": "passed"
            },
            "line": 36,
            "name": "I call unlearnResponse",
            "match": {
              "location": "MimicStepDef.i_call_unlearn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 111747683,
              "status": "passed"
            },
            "line": 37,
            "name": "\"2+2\" returns the response form",
            "match": {
              "arguments": [
                {
                  "val": "2+2",
                  "offset": 1
                }
              ],
              "location": "MimicStepDef.returns_the_response_form(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 113547556,
              "status": "passed"
            },
            "line": 38,
            "name": "\"1+1\" respondes with \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 1
                },
                {
                  "val": "2",
                  "offset": 22
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 132110136,
              "status": "passed"
            },
            "line": 39,
            "name": "\"3+3\" respondes with \"6\"",
            "match": {
              "arguments": [
                {
                  "val": "3+3",
                  "offset": 1
                },
                {
                  "val": "6",
                  "offset": 22
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 29,
            "name": "@UnlearnResponse113"
          }
        ]
      },
      {
        "line": 42,
        "name": "UnlearnResponse removes response from last stored request",
        "description": "\t\t\twithout the need to make that request again",
        "id": "unlearnresponse-removes-the-current-and-the-following-states-of-the-latest-request;unlearnresponse-removes-response-from-last-stored-request",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3320093498,
              "status": "passed"
            },
            "line": 44,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22460665,
              "status": "passed"
            },
            "line": 45,
            "name": "I teach the mock that \"1+1\" has response \"2+2\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 23
                },
                {
                  "val": "2+2",
                  "offset": 42
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 106199099,
              "status": "passed"
            },
            "line": 46,
            "name": "I call unlearnResponse",
            "match": {
              "location": "MimicStepDef.i_call_unlearn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 110157097,
              "status": "passed"
            },
            "line": 47,
            "name": "\"1+1\" returns the response form",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 1
                }
              ],
              "location": "MimicStepDef.returns_the_response_form(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 41,
            "name": "@UnlearnResponse114"
          }
        ]
      }
    ],
    "name": "UnlearnResponse removes the current and the following states of the latest request",
    "description": "",
    "id": "unlearnresponse-removes-the-current-and-the-following-states-of-the-latest-request",
    "keyword": "Feature",
    "uri": "se/iths/testAPI/UnlearnResponse.feature",
    "tags": [
      {
        "line": 1,
        "name": "@UnlearnResponse"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "addResponse adds states to request",
        "description": "",
        "id": "add-response-adds-states-to-a-request;addresponse-adds-states-to-request",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2772446917,
              "status": "passed"
            },
            "line": 6,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8624615177,
              "status": "passed"
            },
            "line": 7,
            "name": "I open the browser with the request \"numbers\"",
            "match": {
              "arguments": [
                {
                  "val": "numbers",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2894126733,
              "status": "passed"
            },
            "line": 8,
            "name": "I input \"1\" in the response form and press the Learn button",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form_and_press_learn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 241733754,
              "status": "passed"
            },
            "line": 9,
            "name": "I enter the request \"1+1\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 21
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 210299167,
              "status": "passed"
            },
            "line": 10,
            "name": "I make an /addResponse request",
            "match": {
              "location": "SeleniumStepDef.i_make_an_addResponse_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2278799001,
              "status": "passed"
            },
            "line": 11,
            "name": "I input \"2\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 360423631,
              "status": "passed"
            },
            "line": 12,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 196691368,
              "status": "passed"
            },
            "line": 13,
            "name": "I make a /resetState request",
            "match": {
              "location": "SeleniumStepDef.i_make_a_ResetState_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 198130939,
              "status": "passed"
            },
            "line": 14,
            "name": "I enter the request \"1+1\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 21
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58121221,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[2]\u003e but was:\u003c[Det hÃ¤r Ã¤r HTML]\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat se.iths.stepDefs.SeleniumStepDef.is_displayed(SeleniumStepDef.java:151)\r\n\tat âœ½.Then \"2\" is displayed(se/iths/testGUI/AddResponse.feature:15)\r\n",
              "status": "failed"
            },
            "line": 15,
            "name": "\"2\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 1
                }
              ],
              "location": "SeleniumStepDef.is_displayed(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@AddResponse111"
          }
        ]
      },
      {
        "line": 19,
        "name": "addResponse works after relearning a state in the middle of a sequense",
        "description": "",
        "id": "add-response-adds-states-to-a-request;addresponse-works-after-relearning-a-state-in-the-middle-of-a-sequense",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2765393514,
              "status": "passed"
            },
            "line": 20,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7802828912,
              "status": "passed"
            },
            "line": 21,
            "name": "I open the browser with the request \"numbers\"",
            "match": {
              "arguments": [
                {
                  "val": "numbers",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4372399396,
              "status": "passed"
            },
            "line": 22,
            "name": "I input \"1\" in the response form and press the Learn button",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form_and_press_learn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5875812836,
              "status": "passed"
            },
            "line": 23,
            "name": "I add the states below to the request \"numbers\"",
            "match": {
              "arguments": [
                {
                  "val": "numbers",
                  "offset": 39
                }
              ],
              "location": "SeleniumStepDef.i_add_the_states_bellow_to_the_request(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "state"
                ],
                "line": 24
              },
              {
                "cells": [
                  "4"
                ],
                "line": 25
              },
              {
                "cells": [
                  "3"
                ],
                "line": 26
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 214212435,
              "status": "passed"
            },
            "line": 27,
            "name": "I make a /resetState request",
            "match": {
              "location": "SeleniumStepDef.i_make_a_ResetState_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 401301604,
              "status": "passed"
            },
            "line": 28,
            "name": "I enter the request \"numbers\" \"2\" times",
            "match": {
              "arguments": [
                {
                  "val": "numbers",
                  "offset": 21
                },
                {
                  "val": "2",
                  "offset": 31
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url_times(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 181535252,
              "status": "passed"
            },
            "line": 29,
            "name": "I make a /relearnResponse request",
            "match": {
              "location": "SeleniumStepDef.i_use_the_relearn_function()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3828266385,
              "status": "passed"
            },
            "line": 30,
            "name": "I input \"2\" in the response form and press the Learn button",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form_and_press_learn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 217872506,
              "status": "passed"
            },
            "line": 31,
            "name": "I make an /addResponse request",
            "match": {
              "location": "SeleniumStepDef.i_make_an_addResponse_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15089394125,
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/form/textarea\"}\n  (Session info: chrome\u003d66.0.3359.139)\n  (Driver info: chromedriver\u003d2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform\u003dWindows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 0 milliseconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.11.0\u0027, revision: \u0027e59cfb3\u0027, time: \u00272018-03-11T20:26:55.152Z\u0027\nSystem info: host: \u0027LAPTOP-1A0S11AO\u0027, ip: \u0027192.168.1.161\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_144\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.38.552522 (437e6fbedfa876..., userDataDir: C:\\Users\\LARSS_~1\\AppData\\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.139, webStorageEnabled: true}\nSession ID: 3cda6a4924d859b53e8e0accd77a0a08\n*** Element info: {Using\u003dxpath, value\u003d/html/body/form/textarea}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)\r\n\tat org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)\r\n\tat org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)\r\n\tat org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:319)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:421)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:361)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:311)\r\n\tat se.iths.helpers.MimicGuiSelenium.sendText(MimicGuiSelenium.java:35)\r\n\tat se.iths.stepDefs.SeleniumStepDef.i_input_in_the_response_form(SeleniumStepDef.java:65)\r\n\tat âœ½.And I input \"4\" in the response form(se/iths/testGUI/AddResponse.feature:32)\r\n",
              "status": "failed"
            },
            "line": 32,
            "name": "I input \"4\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "I enter the request \"numbers\"",
            "match": {
              "arguments": [
                {
                  "val": "numbers",
                  "offset": 21
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "\"2\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 1
                }
              ],
              "location": "SeleniumStepDef.is_displayed(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 18,
            "name": "@AddResponse112"
          }
        ]
      },
      {
        "line": 38,
        "name": "addResponse adds state to the end of a request when the current",
        "description": "\t\t\tstate is the first in the sequense",
        "id": "add-response-adds-states-to-a-request;addresponse-adds-state-to-the-end-of-a-request-when-the-current",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2749849600,
              "status": "passed"
            },
            "line": 40,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5051792528,
              "status": "passed"
            },
            "line": 41,
            "name": "I open the browser with the request \"numbers\"",
            "match": {
              "arguments": [
                {
                  "val": "numbers",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3463075510,
              "status": "passed"
            },
            "line": 42,
            "name": "I input \"1\" in the response form and press the Learn button",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form_and_press_learn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5389552363,
              "status": "passed"
            },
            "line": 43,
            "name": "I add the states below to the request \"numbers\"",
            "match": {
              "arguments": [
                {
                  "val": "numbers",
                  "offset": 39
                }
              ],
              "location": "SeleniumStepDef.i_add_the_states_bellow_to_the_request(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "state"
                ],
                "line": 44
              },
              {
                "cells": [
                  "2"
                ],
                "line": 45
              },
              {
                "cells": [
                  "3"
                ],
                "line": 46
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 192766610,
              "status": "passed"
            },
            "line": 47,
            "name": "I make a /resetState request",
            "match": {
              "location": "SeleniumStepDef.i_make_a_ResetState_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 185644675,
              "status": "passed"
            },
            "line": 48,
            "name": "I make an /addResponse request",
            "match": {
              "location": "SeleniumStepDef.i_make_an_addResponse_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2943066794,
              "status": "passed"
            },
            "line": 49,
            "name": "I input \"4\" in the response form and press the Learn button",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form_and_press_learn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1243866847,
              "status": "passed"
            },
            "line": 50,
            "name": "I enter the request \"numbers\" \"4\" times",
            "match": {
              "arguments": [
                {
                  "val": "numbers",
                  "offset": 21
                },
                {
                  "val": "4",
                  "offset": 31
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url_times(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 111265911,
              "status": "passed"
            },
            "line": 51,
            "name": "\"4\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 1
                }
              ],
              "location": "SeleniumStepDef.is_displayed(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3454201715,
              "status": "passed"
            },
            "line": 52,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 37,
            "name": "@AddResponse113"
          }
        ]
      }
    ],
    "name": "Add response adds states to a request",
    "description": "",
    "id": "add-response-adds-states-to-a-request",
    "keyword": "Feature",
    "uri": "se/iths/testGUI/AddResponse.feature",
    "tags": [
      {
        "line": 1,
        "name": "@AddResponse"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "#New test case sprint 6"
          }
        ],
        "line": 6,
        "name": "LearnNextResponse without paramaters",
        "description": "\t\t\tpresents the response form",
        "id": "learnnextresponse-adds-states/responses-to-a-request;learnnextresponse-without-paramaters",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2848907478,
              "status": "passed"
            },
            "line": 8,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4236403487,
              "status": "passed"
            },
            "line": 9,
            "name": "I open the browser with the request \"LearnNextResponse\"",
            "match": {
              "arguments": [
                {
                  "val": "LearnNextResponse",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15108399081,
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/form/textarea\"}\n  (Session info: chrome\u003d66.0.3359.139)\n  (Driver info: chromedriver\u003d2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform\u003dWindows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 0 milliseconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.11.0\u0027, revision: \u0027e59cfb3\u0027, time: \u00272018-03-11T20:26:55.152Z\u0027\nSystem info: host: \u0027LAPTOP-1A0S11AO\u0027, ip: \u0027192.168.1.161\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_144\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.38.552522 (437e6fbedfa876..., userDataDir: C:\\Users\\LARSS_~1\\AppData\\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.139, webStorageEnabled: true}\nSession ID: f0902460e4ad9d574e70d24c941e3e78\n*** Element info: {Using\u003dxpath, value\u003d/html/body/form/textarea}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)\r\n\tat org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)\r\n\tat org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)\r\n\tat org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:319)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:421)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:361)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:311)\r\n\tat se.iths.helpers.MimicGuiSelenium.sendText(MimicGuiSelenium.java:35)\r\n\tat se.iths.stepDefs.SeleniumStepDef.i_input_in_the_response_form_and_press_learn(SeleniumStepDef.java:71)\r\n\tat âœ½.And I input \"4\" in the response form and press the Learn button(se/iths/testGUI/GUILearnNextResponse.feature:10)\r\n",
              "status": "failed"
            },
            "line": 10,
            "name": "I input \"4\" in the response form and press the Learn button",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form_and_press_learn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "I enter the request \"2+2\"",
            "match": {
              "arguments": [
                {
                  "val": "2+2",
                  "offset": 21
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "\"2+2\" respondes with \"4\"",
            "match": {
              "arguments": [
                {
                  "val": "2+2",
                  "offset": 1
                },
                {
                  "val": "4",
                  "offset": 22
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@GUILearnNextResponse111"
          }
        ]
      }
    ],
    "name": "LearnNextResponse adds states/responses to a request",
    "description": "",
    "id": "learnnextresponse-adds-states/responses-to-a-request",
    "keyword": "Feature",
    "uri": "se/iths/testGUI/GUILearnNextResponse.feature",
    "tags": [
      {
        "line": 1,
        "name": "@GUILearnNextResponse"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Calling the same request when at end of a sequense",
        "description": "\t\t\tdoes not affect unlearnResopnse",
        "id": "using-unlearnresponse-in-the-gui;calling-the-same-request-when-at-end-of-a-sequense",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2841513879,
              "status": "passed"
            },
            "line": 7,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5400353655,
              "status": "passed"
            },
            "line": 8,
            "name": "I open the browser",
            "match": {
              "location": "SeleniumStepDef.i_open_the_browser()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9158089705,
              "status": "passed"
            },
            "line": 9,
            "name": "I add the states below to the request \"numbers\"",
            "match": {
              "arguments": [
                {
                  "val": "numbers",
                  "offset": 39
                }
              ],
              "location": "SeleniumStepDef.i_add_the_states_bellow_to_the_request(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "state"
                ],
                "line": 10
              },
              {
                "cells": [
                  "1"
                ],
                "line": 11
              },
              {
                "cells": [
                  "2"
                ],
                "line": 12
              },
              {
                "cells": [
                  "3"
                ],
                "line": 13
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 207604280,
              "status": "passed"
            },
            "line": 14,
            "name": "I make a /resetState request",
            "match": {
              "location": "SeleniumStepDef.i_make_a_ResetState_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 799976034,
              "status": "passed"
            },
            "line": 15,
            "name": "I enter the request \"numbers\" \"4\" times",
            "match": {
              "arguments": [
                {
                  "val": "numbers",
                  "offset": 21
                },
                {
                  "val": "4",
                  "offset": 31
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url_times(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 225744182,
              "status": "passed"
            },
            "line": 16,
            "name": "I make an /unlearnResponse request",
            "match": {
              "location": "SeleniumStepDef.i_make_a_unlearnResponse_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 177697492,
              "status": "passed"
            },
            "line": 17,
            "name": "I enter the request \"numbers\"",
            "match": {
              "arguments": [
                {
                  "val": "numbers",
                  "offset": 21
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 67102942,
              "status": "passed"
            },
            "line": 18,
            "name": "\"2\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 1
                }
              ],
              "location": "SeleniumStepDef.is_displayed(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 899455771,
              "status": "passed"
            },
            "line": 19,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@GuiUnlearnResponse114"
          }
        ]
      }
    ],
    "name": "Using UnlearnResponse in the GUI",
    "description": "",
    "id": "using-unlearnresponse-in-the-gui",
    "keyword": "Feature",
    "uri": "se/iths/testGUI/GuiUnlearnResponse.feature",
    "tags": [
      {
        "line": 1,
        "name": "@GuiUnlearnResponse"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 7,
        "name": "LearnNextResponse in Chrome",
        "description": "",
        "id": "learnnextresponse-does-not-work-in-some;learnnextresponse-in-chrome",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2789142323,
              "status": "passed"
            },
            "line": 8,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4543277395,
              "status": "passed"
            },
            "line": 9,
            "name": "I open the url \"learnNextResponse?text\u003d2\" in Chrome",
            "match": {
              "arguments": [
                {
                  "val": "learnNextResponse?text\u003d2",
                  "offset": 16
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url_in_chrome(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 687810187,
              "status": "passed"
            },
            "line": 10,
            "name": "I enter the request \"1+1\" \"2\" times",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 21
                },
                {
                  "val": "2",
                  "offset": 27
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url_times(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 146873941,
              "status": "passed"
            },
            "line": 11,
            "name": "\"2\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 1
                }
              ],
              "location": "SeleniumStepDef.is_displayed(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 936055248,
              "status": "passed"
            },
            "line": 12,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 6,
            "name": "@LearnNextResponseMultiBrowser111"
          }
        ]
      },
      {
        "line": 15,
        "name": "LearnNextResponse in FireFox",
        "description": "",
        "id": "learnnextresponse-does-not-work-in-some;learnnextresponse-in-firefox",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2746760351,
              "status": "passed"
            },
            "line": 16,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8003196355,
              "status": "passed"
            },
            "line": 17,
            "name": "I open the url \"learnNextResponse?text\u003d2\" in FireFox",
            "match": {
              "arguments": [
                {
                  "val": "learnNextResponse?text\u003d2",
                  "offset": 16
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url_in_firefox(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 483442067,
              "status": "passed"
            },
            "line": 18,
            "name": "I enter the request \"1+1\" \"2\" times",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 21
                },
                {
                  "val": "2",
                  "offset": 27
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url_times(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 47378201,
              "status": "passed"
            },
            "line": 19,
            "name": "\"2\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 1
                }
              ],
              "location": "SeleniumStepDef.is_displayed(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1531943035,
              "status": "passed"
            },
            "line": 20,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 14,
            "name": "@LearnNextResponseMultiBrowser112"
          }
        ]
      },
      {
        "line": 23,
        "name": "LearnNextResponse in Edge",
        "description": "",
        "id": "learnnextresponse-does-not-work-in-some;learnnextresponse-in-edge",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2859657063,
              "status": "passed"
            },
            "line": 24,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2850288366,
              "status": "passed"
            },
            "line": 25,
            "name": "I open the url \"learnNextResponse?text\u003d2\" in Edge",
            "match": {
              "arguments": [
                {
                  "val": "learnNextResponse?text\u003d2",
                  "offset": 16
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url_in_edge(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 429093768,
              "status": "passed"
            },
            "line": 26,
            "name": "I enter the request \"1+1\" \"2\" times",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 21
                },
                {
                  "val": "2",
                  "offset": 27
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url_times(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22506215,
              "status": "passed"
            },
            "line": 27,
            "name": "\"2\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 1
                }
              ],
              "location": "SeleniumStepDef.is_displayed(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2873954280,
              "status": "passed"
            },
            "line": 28,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 22,
            "name": "@LearnNextResponseMultiBrowser113"
          }
        ]
      }
    ],
    "name": "LearnNextResponse does not work in some",
    "description": "\t\tbrowsers possibly due to cache",
    "id": "learnnextresponse-does-not-work-in-some",
    "keyword": "Feature",
    "uri": "se/iths/testGUI/LearnNextResponseMultiBrowser.feature",
    "tags": [
      {
        "line": 1,
        "name": "@LearnNextResponseMultiBrowser"
      }
    ]
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "#This feature need to be refractored and split in two. One for the new relearnResponse, and one for addResponse"
      }
    ],
    "line": 3,
    "elements": [
      {
        "line": 19,
        "name": "Correct wrong response with web interface",
        "description": "",
        "id": "relearn-function-with-web-interface;correct-wrong-response-with-web-interface;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2732303502,
              "status": "passed"
            },
            "line": 7,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4555627005,
              "status": "passed"
            },
            "line": 8,
            "name": "I open the browser with the request \"1+1\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2675023534,
              "status": "passed"
            },
            "line": 9,
            "name": "I input \"1\" in the response form and press the Learn button",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form_and_press_learn(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 202784921,
              "status": "passed"
            },
            "line": 10,
            "name": "I enter the request \"1+1\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 21
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 202759478,
              "status": "passed"
            },
            "line": 11,
            "name": "I make a /relearnResponse request",
            "match": {
              "location": "SeleniumStepDef.i_use_the_relearn_function()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2418897768,
              "status": "passed"
            },
            "line": 12,
            "name": "I input \"2\" in the response form and press the Learn button",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form_and_press_learn(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 224926729,
              "status": "passed"
            },
            "line": 13,
            "name": "I enter the request \"1+1\"",
            "match": {
              "arguments": [
                {
                  "val": "1+1",
                  "offset": 21
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 73935157,
              "status": "passed"
            },
            "line": 14,
            "name": "\"2\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 1
                }
              ],
              "location": "SeleniumStepDef.is_displayed(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 886736009,
              "status": "passed"
            },
            "line": 15,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 2,
            "name": "@RelearnResponse"
          },
          {
            "line": 5,
            "name": "@RelearnResponse111"
          }
        ]
      },
      {
        "line": 22,
        "name": "Relearn edits the last requested state in a sequense",
        "description": "",
        "id": "relearn-function-with-web-interface;relearn-edits-the-last-requested-state-in-a-sequense",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2717137947,
              "status": "passed"
            },
            "line": 23,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1266794510,
              "status": "passed"
            },
            "line": 24,
            "name": "the mock has learned the below sequense",
            "match": {
              "location": "MimicStepDef.the_mock_has_learned_the_bellow_sequense(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "question",
                  "response"
                ],
                "line": 25
              },
              {
                "cells": [
                  "ABC",
                  "A"
                ],
                "line": 26
              },
              {
                "cells": [
                  "ABC",
                  "D"
                ],
                "line": 27
              },
              {
                "cells": [
                  "ABC",
                  "C"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 505612191,
              "status": "passed"
            },
            "line": 29,
            "name": "I call resetState",
            "match": {
              "location": "MimicStepDef.i_call_resetState()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4397727711,
              "status": "passed"
            },
            "line": 30,
            "name": "I open the browser with the request \"ABC\"",
            "match": {
              "arguments": [
                {
                  "val": "ABC",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 314527679,
              "status": "passed"
            },
            "line": 31,
            "name": "I enter the request \"ABC\"",
            "match": {
              "arguments": [
                {
                  "val": "ABC",
                  "offset": 21
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 374398298,
              "status": "passed"
            },
            "line": 32,
            "name": "I make a /relearnResponse request",
            "match": {
              "location": "SeleniumStepDef.i_use_the_relearn_function()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2308566675,
              "status": "passed"
            },
            "line": 33,
            "name": "I input \"B\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "B",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 303792456,
              "status": "passed"
            },
            "line": 34,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 209971282,
              "status": "passed"
            },
            "line": 35,
            "name": "I make a /resetState request",
            "match": {
              "location": "SeleniumStepDef.i_make_a_ResetState_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 364621694,
              "status": "passed"
            },
            "line": 36,
            "name": "I enter the request \"ABC\" \"2\" times",
            "match": {
              "arguments": [
                {
                  "val": "ABC",
                  "offset": 21
                },
                {
                  "val": "2",
                  "offset": 27
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url_times(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 68625818,
              "status": "passed"
            },
            "line": 37,
            "name": "\"B\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "B",
                  "offset": 1
                }
              ],
              "location": "SeleniumStepDef.is_displayed(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 851982774,
              "status": "passed"
            },
            "line": 38,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 21,
            "name": "@RelearnResponse112"
          }
        ]
      }
    ],
    "name": "Relearn function with web interface",
    "description": "",
    "id": "relearn-function-with-web-interface",
    "keyword": "Feature",
    "uri": "se/iths/testGUI/RelearnResponse.feature",
    "tags": [
      {
        "line": 2,
        "name": "@RelearnResponse"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 7,
        "name": "Store a request with response form",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-a-request-with-response-form",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2789696319,
              "status": "passed"
            },
            "line": 8,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4534898914,
              "status": "passed"
            },
            "line": 9,
            "name": "I open the browser with the request \"2+2\"",
            "match": {
              "arguments": [
                {
                  "val": "2+2",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2618408363,
              "status": "passed"
            },
            "line": 10,
            "name": "I input \"4\" in the response form and press the Learn button",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form_and_press_learn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 271077109,
              "status": "passed"
            },
            "line": 11,
            "name": "I enter the request \"2+2\"",
            "match": {
              "arguments": [
                {
                  "val": "2+2",
                  "offset": 21
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 78781601,
              "status": "passed"
            },
            "line": 12,
            "name": "\"4\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 1
                }
              ],
              "location": "SeleniumStepDef.is_displayed(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 811504910,
              "status": "passed"
            },
            "line": 13,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 6,
            "name": "@ResponseForm111"
          }
        ]
      },
      {
        "line": 27,
        "name": "Store mime type response with auto recognition",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-auto-recognition;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2741613517,
              "status": "passed"
            },
            "line": 18,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4484489325,
              "status": "passed"
            },
            "line": 19,
            "name": "I open the browser with the request \"TEXT\"",
            "match": {
              "arguments": [
                {
                  "val": "TEXT",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2472818464,
              "status": "passed"
            },
            "line": 20,
            "name": "I input \"TextMime\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "TextMime",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 316745307,
              "status": "passed"
            },
            "line": 21,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 839976641,
              "status": "passed"
            },
            "line": 22,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14017756,
              "status": "passed"
            },
            "line": 23,
            "name": "the request \"TEXT\" has the mime type \"text/plain;\"",
            "match": {
              "arguments": [
                {
                  "val": "TEXT",
                  "offset": 13
                },
                {
                  "val": "text/plain;",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@ResponseForm"
          },
          {
            "line": 16,
            "name": "@ResponseForm112"
          }
        ]
      },
      {
        "line": 28,
        "name": "Store mime type response with auto recognition",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-auto-recognition;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2788075777,
              "status": "passed"
            },
            "line": 18,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4561011032,
              "status": "passed"
            },
            "line": 19,
            "name": "I open the browser with the request \"JSON\"",
            "match": {
              "arguments": [
                {
                  "val": "JSON",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2648248263,
              "status": "passed"
            },
            "line": 20,
            "name": "I input \"{ \u0027name\u0027:\u0027John\u0027, \u0027age\u0027:30 }\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "{ \u0027name\u0027:\u0027John\u0027, \u0027age\u0027:30 }",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 387773828,
              "status": "passed"
            },
            "line": 21,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 858704600,
              "status": "passed"
            },
            "line": 22,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5234242,
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:86)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat org.junit.Assert.assertTrue(Assert.java:52)\r\n\tat se.iths.stepDefs.MimicStepDef.the_request_has_the_mime_type(MimicStepDef.java:102)\r\n\tat âœ½.Then the request \"JSON\" has the mime type \"application/json;\"(se/iths/testGUI/ResponseForm.feature:23)\r\n",
              "status": "failed"
            },
            "line": 23,
            "name": "the request \"JSON\" has the mime type \"application/json;\"",
            "match": {
              "arguments": [
                {
                  "val": "JSON",
                  "offset": 13
                },
                {
                  "val": "application/json;",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@ResponseForm"
          },
          {
            "line": 16,
            "name": "@ResponseForm112"
          }
        ]
      },
      {
        "line": 29,
        "name": "Store mime type response with auto recognition",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-auto-recognition;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2752109085,
              "status": "passed"
            },
            "line": 18,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4667889289,
              "status": "passed"
            },
            "line": 19,
            "name": "I open the browser with the request \"XML\"",
            "match": {
              "arguments": [
                {
                  "val": "XML",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2664826304,
              "status": "passed"
            },
            "line": 20,
            "name": "I input \"\u003cnote\u003e\u003cto\u003eTest\u003c/to\u003e\u003c/note\u003e\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "\u003cnote\u003e\u003cto\u003eTest\u003c/to\u003e\u003c/note\u003e",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 367555003,
              "status": "passed"
            },
            "line": 21,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 833805120,
              "status": "passed"
            },
            "line": 22,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5049576,
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:86)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat org.junit.Assert.assertTrue(Assert.java:52)\r\n\tat se.iths.stepDefs.MimicStepDef.the_request_has_the_mime_type(MimicStepDef.java:102)\r\n\tat âœ½.Then the request \"XML\" has the mime type \"application/xml;\"(se/iths/testGUI/ResponseForm.feature:23)\r\n",
              "status": "failed"
            },
            "line": 23,
            "name": "the request \"XML\" has the mime type \"application/xml;\"",
            "match": {
              "arguments": [
                {
                  "val": "XML",
                  "offset": 13
                },
                {
                  "val": "application/xml;",
                  "offset": 37
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@ResponseForm"
          },
          {
            "line": 16,
            "name": "@ResponseForm112"
          }
        ]
      },
      {
        "line": 30,
        "name": "Store mime type response with auto recognition",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-auto-recognition;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2774971090,
              "status": "passed"
            },
            "line": 18,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4287264480,
              "status": "passed"
            },
            "line": 19,
            "name": "I open the browser with the request \"HTML\"",
            "match": {
              "arguments": [
                {
                  "val": "HTML",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2750601394,
              "status": "passed"
            },
            "line": 20,
            "name": "I input \"\u003chtml\u003eDet hÃ¤r Ã¤r HTML\u003c/html\u003e\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "\u003chtml\u003eDet hÃ¤r Ã¤r HTML\u003c/html\u003e",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 359569245,
              "status": "passed"
            },
            "line": 21,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 885390001,
              "status": "passed"
            },
            "line": 22,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3369120,
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:86)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat org.junit.Assert.assertTrue(Assert.java:52)\r\n\tat se.iths.stepDefs.MimicStepDef.the_request_has_the_mime_type(MimicStepDef.java:102)\r\n\tat âœ½.Then the request \"HTML\" has the mime type \"text/html;\"(se/iths/testGUI/ResponseForm.feature:23)\r\n",
              "status": "failed"
            },
            "line": 23,
            "name": "the request \"HTML\" has the mime type \"text/html;\"",
            "match": {
              "arguments": [
                {
                  "val": "HTML",
                  "offset": 13
                },
                {
                  "val": "text/html;",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@ResponseForm"
          },
          {
            "line": 16,
            "name": "@ResponseForm112"
          }
        ]
      },
      {
        "line": 45,
        "name": "Store mime type response with manual type set",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-manual-type-set;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2755538120,
              "status": "passed"
            },
            "line": 35,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4466043701,
              "status": "passed"
            },
            "line": 36,
            "name": "I open the browser with the request \"TEXT\"",
            "match": {
              "arguments": [
                {
                  "val": "TEXT",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 483773645,
              "status": "passed"
            },
            "line": 37,
            "name": "I set mime type as \"TEXT\"",
            "match": {
              "arguments": [
                {
                  "val": "TEXT",
                  "offset": 20
                }
              ],
              "location": "SeleniumStepDef.i_set_mime_type_as(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2391035842,
              "status": "passed"
            },
            "line": 38,
            "name": "I input \"TextMime\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "TextMime",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 311157738,
              "status": "passed"
            },
            "line": 39,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 827054568,
              "status": "passed"
            },
            "line": 40,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3364196,
              "status": "passed"
            },
            "line": 41,
            "name": "the request \"TEXT\" has the mime type \"text/plain;\"",
            "match": {
              "arguments": [
                {
                  "val": "TEXT",
                  "offset": 13
                },
                {
                  "val": "text/plain;",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 33,
            "name": "@ResponseForm113"
          },
          {
            "line": 1,
            "name": "@ResponseForm"
          }
        ]
      },
      {
        "line": 46,
        "name": "Store mime type response with manual type set",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-manual-type-set;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2765034442,
              "status": "passed"
            },
            "line": 35,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4503525881,
              "status": "passed"
            },
            "line": 36,
            "name": "I open the browser with the request \"JSON\"",
            "match": {
              "arguments": [
                {
                  "val": "JSON",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 480058995,
              "status": "passed"
            },
            "line": 37,
            "name": "I set mime type as \"JSON\"",
            "match": {
              "arguments": [
                {
                  "val": "JSON",
                  "offset": 20
                }
              ],
              "location": "SeleniumStepDef.i_set_mime_type_as(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2640802138,
              "status": "passed"
            },
            "line": 38,
            "name": "I input \"{ /\u0027name/\u0027:/\u0027John/\u0027, /\u0027age/\u0027:30 }\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "{ /\u0027name/\u0027:/\u0027John/\u0027, /\u0027age/\u0027:30 }",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 388775126,
              "status": "passed"
            },
            "line": 39,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 855377748,
              "status": "passed"
            },
            "line": 40,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7375542,
              "status": "passed"
            },
            "line": 41,
            "name": "the request \"JSON\" has the mime type \"application/json;\"",
            "match": {
              "arguments": [
                {
                  "val": "JSON",
                  "offset": 13
                },
                {
                  "val": "application/json;",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 33,
            "name": "@ResponseForm113"
          },
          {
            "line": 1,
            "name": "@ResponseForm"
          }
        ]
      },
      {
        "line": 47,
        "name": "Store mime type response with manual type set",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-manual-type-set;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2787897678,
              "status": "passed"
            },
            "line": 35,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4410964537,
              "status": "passed"
            },
            "line": 36,
            "name": "I open the browser with the request \"XML\"",
            "match": {
              "arguments": [
                {
                  "val": "XML",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 525837992,
              "status": "passed"
            },
            "line": 37,
            "name": "I set mime type as \"XML\"",
            "match": {
              "arguments": [
                {
                  "val": "XML",
                  "offset": 20
                }
              ],
              "location": "SeleniumStepDef.i_set_mime_type_as(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2576784751,
              "status": "passed"
            },
            "line": 38,
            "name": "I input \"\u003cnote\u003e\u003cto\u003eTest\u003c/to\u003e\u003c/note\u003e\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "\u003cnote\u003e\u003cto\u003eTest\u003c/to\u003e\u003c/note\u003e",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 338178821,
              "status": "passed"
            },
            "line": 39,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 944838762,
              "status": "passed"
            },
            "line": 40,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8791311,
              "status": "passed"
            },
            "line": 41,
            "name": "the request \"XML\" has the mime type \"application/xml;\"",
            "match": {
              "arguments": [
                {
                  "val": "XML",
                  "offset": 13
                },
                {
                  "val": "application/xml;",
                  "offset": 37
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 33,
            "name": "@ResponseForm113"
          },
          {
            "line": 1,
            "name": "@ResponseForm"
          }
        ]
      },
      {
        "line": 48,
        "name": "Store mime type response with manual type set",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-manual-type-set;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2760261864,
              "status": "passed"
            },
            "line": 35,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4588173691,
              "status": "passed"
            },
            "line": 36,
            "name": "I open the browser with the request \"HTML\"",
            "match": {
              "arguments": [
                {
                  "val": "HTML",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 577804106,
              "status": "passed"
            },
            "line": 37,
            "name": "I set mime type as \"HTML\"",
            "match": {
              "arguments": [
                {
                  "val": "HTML",
                  "offset": 20
                }
              ],
              "location": "SeleniumStepDef.i_set_mime_type_as(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2585629410,
              "status": "passed"
            },
            "line": 38,
            "name": "I input \"\u003chtml\u003e Det hÃ¤r Ã¤r HTML \u003c/html\u003e\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "\u003chtml\u003e Det hÃ¤r Ã¤r HTML \u003c/html\u003e",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 429384309,
              "status": "passed"
            },
            "line": 39,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 853236448,
              "status": "passed"
            },
            "line": 40,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6112840,
              "status": "passed"
            },
            "line": 41,
            "name": "the request \"HTML\" has the mime type \"text/html;\"",
            "match": {
              "arguments": [
                {
                  "val": "HTML",
                  "offset": 13
                },
                {
                  "val": "text/html;",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 33,
            "name": "@ResponseForm113"
          },
          {
            "line": 1,
            "name": "@ResponseForm"
          }
        ]
      }
    ],
    "name": "The GUI response form stores requests and automatically",
    "description": "\t\t recognises mime type of request",
    "id": "the-gui-response-form-stores-requests-and-automatically",
    "keyword": "Feature",
    "uri": "se/iths/testGUI/ResponseForm.feature",
    "tags": [
      {
        "line": 1,
        "name": "@ResponseForm"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "With one request stored it is visible in ViewRequests",
        "description": "",
        "id": "stored-requests-are-visible-in-the-overview-returned-by-/viewrequests;with-one-request-stored-it-is-visible-in-viewrequests",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2766135048,
              "status": "passed"
            },
            "line": 5,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4671424198,
              "status": "passed"
            },
            "line": 6,
            "name": "I open the browser with the request \"numbers\"",
            "match": {
              "arguments": [
                {
                  "val": "numbers",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2634770551,
              "status": "passed"
            },
            "line": 7,
            "name": "I input \"1\" in the response form and press the Learn button",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form_and_press_learn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 219756914,
              "status": "passed"
            },
            "line": 8,
            "name": "I make a /viewRequests request",
            "match": {
              "location": "SeleniumStepDef.i_make_a_viewRequests_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 55203916,
              "status": "passed"
            },
            "line": 9,
            "name": "\"numbers\" is present in the overview",
            "match": {
              "arguments": [
                {
                  "val": "numbers",
                  "offset": 1
                }
              ],
              "location": "SeleniumStepDef.is_present_in_the_overview(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 821874905,
              "status": "passed"
            },
            "line": 10,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 3,
            "name": "@ViewRequests111"
          }
        ]
      },
      {
        "line": 14,
        "name": "With multiple requests stored all are visible in ViewRequests",
        "description": "",
        "id": "stored-requests-are-visible-in-the-overview-returned-by-/viewrequests;with-multiple-requests-stored-all-are-visible-in-viewrequests",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2775836145,
              "status": "passed"
            },
            "line": 15,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5077246005,
              "status": "passed"
            },
            "line": 16,
            "name": "I open the browser",
            "match": {
              "location": "SeleniumStepDef.i_open_the_browser()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6535924424,
              "status": "passed"
            },
            "line": 17,
            "name": "I teach Mimic the below requests and responses",
            "match": {
              "location": "SeleniumStepDef.i_teach_Mimic_the_below_requests_and_responses(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "request",
                  "response"
                ],
                "line": 18
              },
              {
                "cells": [
                  "I",
                  "drink"
                ],
                "line": 19
              },
              {
                "cells": [
                  "your",
                  "milkshake"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 239918288,
              "status": "passed"
            },
            "line": 21,
            "name": "I make a /viewRequests request",
            "match": {
              "location": "SeleniumStepDef.i_make_a_viewRequests_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85388934,
              "status": "passed"
            },
            "line": 22,
            "name": "all requests below are present in the overview",
            "match": {
              "location": "SeleniumStepDef.all_requests_below_are_present_in_the_overview(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "request"
                ],
                "line": 23
              },
              {
                "cells": [
                  "I"
                ],
                "line": 24
              },
              {
                "cells": [
                  "your"
                ],
                "line": 25
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 880040856,
              "status": "passed"
            },
            "line": 26,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 13,
            "name": "@ViewRequests112"
          }
        ]
      },
      {
        "line": 29,
        "name": "Open view requests with no responses stored",
        "description": "",
        "id": "stored-requests-are-visible-in-the-overview-returned-by-/viewrequests;open-view-requests-with-no-responses-stored",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2774183594,
              "status": "passed"
            },
            "line": 30,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10048678,
              "status": "passed"
            },
            "line": 31,
            "name": "that no requests are stored",
            "match": {
              "location": "MimicStepDef.that_no_requests_are_stored()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5336225059,
              "status": "passed"
            },
            "line": 32,
            "name": "I open the browser",
            "match": {
              "location": "SeleniumStepDef.i_open_the_browser()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1612676346,
              "status": "passed"
            },
            "line": 33,
            "name": "I make a /viewRequests request",
            "match": {
              "location": "SeleniumStepDef.i_make_a_viewRequests_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91743480,
              "status": "passed"
            },
            "line": 34,
            "name": "\"No requests\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "No requests",
                  "offset": 1
                }
              ],
              "location": "SeleniumStepDef.is_displayed(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1076340733,
              "status": "passed"
            },
            "line": 35,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 28,
            "name": "@ViewRequests113"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 37,
            "value": "#New test case sprint 6"
          }
        ],
        "line": 39,
        "name": "Click on requests in ViewRequests to view the response",
        "description": "",
        "id": "stored-requests-are-visible-in-the-overview-returned-by-/viewrequests;click-on-requests-in-viewrequests-to-view-the-response",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2770463198,
              "status": "passed"
            },
            "line": 40,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4910262808,
              "status": "passed"
            },
            "line": 41,
            "name": "I open the browser",
            "match": {
              "location": "SeleniumStepDef.i_open_the_browser()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7039085077,
              "status": "passed"
            },
            "line": 42,
            "name": "I teach Mimic the below requests and responses",
            "match": {
              "location": "SeleniumStepDef.i_teach_Mimic_the_below_requests_and_responses(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "request",
                  "response"
                ],
                "line": 43
              },
              {
                "cells": [
                  "I",
                  "drink"
                ],
                "line": 44
              },
              {
                "cells": [
                  "your",
                  "milkshake"
                ],
                "line": 45
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 205483910,
              "status": "passed"
            },
            "line": 46,
            "name": "I make a /viewRequests request",
            "match": {
              "location": "SeleniumStepDef.i_make_a_viewRequests_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 834659506,
              "status": "passed"
            },
            "line": 47,
            "name": "all requests below are clickable and displays the corresponding response",
            "match": {
              "location": "SeleniumStepDef.all_requests_below_are_clickable(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "request",
                  "response"
                ],
                "line": 48
              },
              {
                "cells": [
                  "I",
                  "drink"
                ],
                "line": 49
              },
              {
                "cells": [
                  "your",
                  "milkshake"
                ],
                "line": 50
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 962309353,
              "status": "passed"
            },
            "line": 51,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 38,
            "name": "@ViewRequests114"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 53,
            "value": "#New test case sprint 6"
          }
        ],
        "line": 55,
        "name": "A request with multiple states displays the selected",
        "description": "\t\t\tstates response when clicked",
        "id": "stored-requests-are-visible-in-the-overview-returned-by-/viewrequests;a-request-with-multiple-states-displays-the-selected",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2758024128,
              "status": "passed"
            },
            "line": 57,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5693109267,
              "status": "passed"
            },
            "line": 58,
            "name": "I open the browser",
            "match": {
              "location": "SeleniumStepDef.i_open_the_browser()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10254288549,
              "status": "passed"
            },
            "line": 59,
            "name": "I add the states below to the request \"numbers\"",
            "match": {
              "arguments": [
                {
                  "val": "numbers",
                  "offset": 39
                }
              ],
              "location": "SeleniumStepDef.i_add_the_states_bellow_to_the_request(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "state"
                ],
                "line": 60
              },
              {
                "cells": [
                  "one"
                ],
                "line": 61
              },
              {
                "cells": [
                  "two"
                ],
                "line": 62
              },
              {
                "cells": [
                  "three"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 230112547,
              "status": "passed"
            },
            "line": 64,
            "name": "I make a /viewRequests request",
            "match": {
              "location": "SeleniumStepDef.i_make_a_viewRequests_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 231635833,
              "status": "passed"
            },
            "line": 65,
            "name": "I click state \"3\" in the viewRequests overview",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 15
                }
              ],
              "location": "SeleniumStepDef.i_click_state_in_viewRequests(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 80215426,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[thre]e\u003e but was:\u003c[on]e\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat se.iths.stepDefs.SeleniumStepDef.is_displayed(SeleniumStepDef.java:151)\r\n\tat âœ½.Then \"three\" is displayed(se/iths/testGUI/ViewRequests.feature:66)\r\n",
              "status": "failed"
            },
            "line": 66,
            "name": "\"three\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "three",
                  "offset": 1
                }
              ],
              "location": "SeleniumStepDef.is_displayed(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 67,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 54,
            "name": "@ViewRequests115"
          }
        ]
      }
    ],
    "name": "Stored requests are visible in the overview returned by /viewRequests",
    "description": "",
    "id": "stored-requests-are-visible-in-the-overview-returned-by-/viewrequests",
    "keyword": "Feature",
    "uri": "se/iths/testGUI/ViewRequests.feature",
    "tags": [
      {
        "line": 1,
        "name": "@ViewRequests"
      }
    ]
  }
]