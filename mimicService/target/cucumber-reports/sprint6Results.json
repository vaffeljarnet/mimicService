[
  {
    "line": 2,
    "elements": [
      {
        "line": 40,
        "name": "You can store requests with forward slash sign",
        "description": "",
        "id": "learnnextresponse-adds-states/responses-to-a-request;you-can-store-requests-with-forward-slash-sign;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3855294443,
              "status": "passed"
            },
            "line": 34,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 41665881,
              "status": "passed"
            },
            "line": 35,
            "name": "I teach the mock that \"test/test\" has response \"test\"",
            "match": {
              "arguments": [
                {
                  "val": "test/test",
                  "offset": 23
                },
                {
                  "val": "test",
                  "offset": 48
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 116459117,
              "status": "passed"
            },
            "line": 36,
            "name": "\"test/test\" respondes with \"test\"",
            "match": {
              "arguments": [
                {
                  "val": "test/test",
                  "offset": 1
                },
                {
                  "val": "test",
                  "offset": 28
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 32,
            "name": "@LearnNextResponse113"
          },
          {
            "line": 1,
            "name": "@LearnNextResponseFeature"
          }
        ]
      },
      {
        "line": 41,
        "name": "You can store requests with forward slash sign",
        "description": "",
        "id": "learnnextresponse-adds-states/responses-to-a-request;you-can-store-requests-with-forward-slash-sign;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3015912425,
              "status": "passed"
            },
            "line": 34,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32593877,
              "status": "passed"
            },
            "line": 35,
            "name": "I teach the mock that \"te/te/te\" has response \"test\"",
            "match": {
              "arguments": [
                {
                  "val": "te/te/te",
                  "offset": 23
                },
                {
                  "val": "test",
                  "offset": 47
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 125826173,
              "status": "passed"
            },
            "line": 36,
            "name": "\"te/te/te\" respondes with \"test\"",
            "match": {
              "arguments": [
                {
                  "val": "te/te/te",
                  "offset": 1
                },
                {
                  "val": "test",
                  "offset": 27
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 32,
            "name": "@LearnNextResponse113"
          },
          {
            "line": 1,
            "name": "@LearnNextResponseFeature"
          }
        ]
      }
    ],
    "name": "LearnNextResponse adds states/responses to a request",
    "description": "",
    "id": "learnnextresponse-adds-states/responses-to-a-request",
    "keyword": "Feature",
    "uri": "se/iths/testAPI/LearnNextResponse.feature",
    "tags": [
      {
        "line": 1,
        "name": "@LearnNextResponseFeature"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 36,
        "name": "Calling with format \"/text?param\"",
        "description": "",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;calling-with-format-\"/text?param\"",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3131540956,
              "status": "passed"
            },
            "line": 37,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 102263671,
              "status": "passed"
            },
            "line": 38,
            "name": "I make the request \"test?ett\"",
            "match": {
              "arguments": [
                {
                  "val": "test?ett",
                  "offset": 20
                }
              ],
              "location": "MimicStepDef.i_make_the_request(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 124267186,
              "status": "passed"
            },
            "line": 39,
            "name": "\"test?ett\" returns the response form",
            "match": {
              "arguments": [
                {
                  "val": "test?ett",
                  "offset": 1
                }
              ],
              "location": "MimicStepDef.returns_the_response_form(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 35,
            "name": "@MachineLearning113"
          }
        ]
      },
      {
        "line": 69,
        "name": "Mimic can learn how to respond with complex responses",
        "description": "",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;mimic-can-learn-how-to-respond-with-complex-responses",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2806059328,
              "status": "passed"
            },
            "line": 70,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 34087206,
              "status": "passed"
            },
            "line": 71,
            "name": "that the mock has learned \"montlyCost?TotalCost\u003d10000\u0026Months\u003d10\" with \"{ \u0027TotalCost\u0027: 10000,\u0027MontlyCost\u0027: 1000,\u0027Months\u0027: 10;}\"",
            "match": {
              "arguments": [
                {
                  "val": "montlyCost?TotalCost\u003d10000\u0026Months\u003d10",
                  "offset": 27
                },
                {
                  "val": "{ \u0027TotalCost\u0027: 10000,\u0027MontlyCost\u0027: 1000,\u0027Months\u0027: 10;}",
                  "offset": 71
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21636235,
              "status": "passed"
            },
            "line": 72,
            "name": "that the mock has learned \"montlyCost?TotalCost\u003d20000\u0026Months\u003d10\" with \"{ \u0027TotalCost\u0027: 20000,\u0027MontlyCost\u0027: 2000,\u0027Months\u0027: 10;}\"",
            "match": {
              "arguments": [
                {
                  "val": "montlyCost?TotalCost\u003d20000\u0026Months\u003d10",
                  "offset": 27
                },
                {
                  "val": "{ \u0027TotalCost\u0027: 20000,\u0027MontlyCost\u0027: 2000,\u0027Months\u0027: 10;}",
                  "offset": 71
                }
              ],
              "location": "MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 152998681,
              "status": "passed"
            },
            "line": 73,
            "name": "\"montlyCost?TotalCost\u003d30000\u0026Months\u003d10\" respondes with \"{ \u0027TotalCost\u0027: 30000,\u0027MontlyCost\u0027: 3000,\u0027Months\u0027: 10;}\"",
            "match": {
              "arguments": [
                {
                  "val": "montlyCost?TotalCost\u003d30000\u0026Months\u003d10",
                  "offset": 1
                },
                {
                  "val": "{ \u0027TotalCost\u0027: 30000,\u0027MontlyCost\u0027: 3000,\u0027Months\u0027: 10;}",
                  "offset": 55
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 68,
            "name": "@MachineLearning117"
          }
        ]
      },
      {
        "line": 87,
        "name": "Correcting does not produce empty responses",
        "description": "",
        "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond;correcting-does-not-produce-empty-responses",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2845202266,
              "status": "passed"
            },
            "line": 88,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18317590,
              "status": "passed"
            },
            "line": 89,
            "name": "I teach the mock that \"add?value1\u003d10\u0026value2\u003d20\" has response \"15\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d10\u0026value2\u003d20",
                  "offset": 23
                },
                {
                  "val": "15",
                  "offset": 62
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 24281467,
              "status": "passed"
            },
            "line": 90,
            "name": "I teach the mock that \"add?value1\u003d20\u0026value2\u003d20\" has response \"30\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d20\u0026value2\u003d20",
                  "offset": 23
                },
                {
                  "val": "30",
                  "offset": 62
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 519408349,
              "status": "passed"
            },
            "line": 91,
            "name": "\"add?value1\u003d1\u0026value2\u003d2\" does not responde with \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d2",
                  "offset": 1
                },
                {
                  "val": "3",
                  "offset": 48
                }
              ],
              "location": "MimicStepDef.does_not_responde_with(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95204934,
              "status": "passed"
            },
            "line": 92,
            "name": "I teach the mock that \"add?value1\u003d1\u0026value2\u003d2\" has response \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d1\u0026value2\u003d2",
                  "offset": 23
                },
                {
                  "val": "3",
                  "offset": 60
                }
              ],
              "location": "MimicStepDef.i_teach_the_mock_that_has_response(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3343302263,
              "status": "passed"
            },
            "line": 93,
            "name": "\"add?value1\u003d2\u0026value2\u003d2\" does not return an empty response",
            "match": {
              "arguments": [
                {
                  "val": "add?value1\u003d2\u0026value2\u003d2",
                  "offset": 1
                }
              ],
              "location": "MimicStepDef.does_not_return_empty(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 86,
            "name": "@MachineLearning119"
          }
        ]
      }
    ],
    "name": "As a Tester I would like the mock to learn how to respond",
    "description": "\t\tto requests that I have not defined so that I do not \r\n      have to create code for that manually (only add, mult, sub and div)",
    "id": "as-a-tester-i-would-like-the-mock-to-learn-how-to-respond",
    "keyword": "Feature",
    "uri": "se/iths/testAPI/MachineLearning.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MachineLearningFeature"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "#New test case sprint 6"
          }
        ],
        "line": 6,
        "name": "LearnNextResponse without paramaters",
        "description": "\t\t\tpresents the response form",
        "id": "learnnextresponse-adds-states/responses-to-a-request;learnnextresponse-without-paramaters",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3509213990,
              "status": "passed"
            },
            "line": 8,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10236880744,
              "status": "passed"
            },
            "line": 9,
            "name": "I open the browser with the request \"LearnNextResponse\"",
            "match": {
              "arguments": [
                {
                  "val": "LearnNextResponse",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30180106351,
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/form/textarea\"}\n  (Session info: chrome\u003d66.0.3359.139)\n  (Driver info: chromedriver\u003d2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform\u003dWindows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 0 milliseconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.11.0\u0027, revision: \u0027e59cfb3\u0027, time: \u00272018-03-11T20:26:55.152Z\u0027\nSystem info: host: \u0027LAPTOP-1A0S11AO\u0027, ip: \u0027192.168.1.95\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_161\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.38.552522 (437e6fbedfa876..., userDataDir: C:\\Users\\LARSS_~1\\AppData\\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.139, webStorageEnabled: true}\nSession ID: 610c88f6e3852a293eeb75a4ad747dff\n*** Element info: {Using\u003dxpath, value\u003d/html/body/form/textarea}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat java.lang.reflect.Constructor.newInstance(Unknown Source)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)\r\n\tat org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)\r\n\tat org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)\r\n\tat org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:319)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:421)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:361)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:311)\r\n\tat se.iths.helpers.MimicGuiSelenium.sendText(MimicGuiSelenium.java:35)\r\n\tat se.iths.stepDefs.SeleniumStepDef.i_input_in_the_response_form_and_press_learn(SeleniumStepDef.java:71)\r\n\tat ✽.And I input \"4\" in the response form and press the Learn button(se/iths/testGUI/GUILearnNextResponse.feature:10)\r\n",
              "status": "failed"
            },
            "line": 10,
            "name": "I input \"4\" in the response form and press the Learn button",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form_and_press_learn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "I enter the request \"2+2\"",
            "match": {
              "arguments": [
                {
                  "val": "2+2",
                  "offset": 21
                }
              ],
              "location": "SeleniumStepDef.i_enter_the_url(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "\"2+2\" respondes with \"4\"",
            "match": {
              "arguments": [
                {
                  "val": "2+2",
                  "offset": 1
                },
                {
                  "val": "4",
                  "offset": 22
                }
              ],
              "location": "MimicStepDef.respondes_with(String,String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@GUILearnNextResponse111"
          }
        ]
      }
    ],
    "name": "LearnNextResponse adds states/responses to a request",
    "description": "",
    "id": "learnnextresponse-adds-states/responses-to-a-request",
    "keyword": "Feature",
    "uri": "se/iths/testGUI/GUILearnNextResponse.feature",
    "tags": [
      {
        "line": 1,
        "name": "@GUILearnNextResponseFeature"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 27,
        "name": "Store mime type response with auto recognition",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-auto-recognition;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2860134732,
              "status": "passed"
            },
            "line": 18,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4272505599,
              "status": "passed"
            },
            "line": 19,
            "name": "I open the browser with the request \"TEXT\"",
            "match": {
              "arguments": [
                {
                  "val": "TEXT",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2458497857,
              "status": "passed"
            },
            "line": 20,
            "name": "I input \"TextMime\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "TextMime",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 522340837,
              "status": "passed"
            },
            "line": 21,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 814082020,
              "status": "passed"
            },
            "line": 22,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31750983,
              "status": "passed"
            },
            "line": 23,
            "name": "the request \"TEXT\" has the mime type \"text/plain;\"",
            "match": {
              "arguments": [
                {
                  "val": "TEXT",
                  "offset": 13
                },
                {
                  "val": "text/plain;",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 16,
            "name": "@ResponseForm112"
          },
          {
            "line": 1,
            "name": "@ResponseFormFeature"
          }
        ]
      },
      {
        "line": 28,
        "name": "Store mime type response with auto recognition",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-auto-recognition;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3014663675,
              "status": "passed"
            },
            "line": 18,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4487721793,
              "status": "passed"
            },
            "line": 19,
            "name": "I open the browser with the request \"JSON\"",
            "match": {
              "arguments": [
                {
                  "val": "JSON",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2610756234,
              "status": "passed"
            },
            "line": 20,
            "name": "I input \"{ \u0027name\u0027:\u0027John\u0027, \u0027age\u0027:30 }\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "{ \u0027name\u0027:\u0027John\u0027, \u0027age\u0027:30 }",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 320797279,
              "status": "passed"
            },
            "line": 21,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 874907975,
              "status": "passed"
            },
            "line": 22,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4342923,
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:86)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat org.junit.Assert.assertTrue(Assert.java:52)\r\n\tat se.iths.stepDefs.MimicStepDef.the_request_has_the_mime_type(MimicStepDef.java:113)\r\n\tat ✽.Then the request \"JSON\" has the mime type \"application/json;\"(se/iths/testGUI/ResponseForm.feature:23)\r\n",
              "status": "failed"
            },
            "line": 23,
            "name": "the request \"JSON\" has the mime type \"application/json;\"",
            "match": {
              "arguments": [
                {
                  "val": "JSON",
                  "offset": 13
                },
                {
                  "val": "application/json;",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 16,
            "name": "@ResponseForm112"
          },
          {
            "line": 1,
            "name": "@ResponseFormFeature"
          }
        ]
      },
      {
        "line": 29,
        "name": "Store mime type response with auto recognition",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-auto-recognition;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2887383569,
              "status": "passed"
            },
            "line": 18,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4946535634,
              "status": "passed"
            },
            "line": 19,
            "name": "I open the browser with the request \"XML\"",
            "match": {
              "arguments": [
                {
                  "val": "XML",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2608020311,
              "status": "passed"
            },
            "line": 20,
            "name": "I input \"\u003cnote\u003e\u003cto\u003eTest\u003c/to\u003e\u003c/note\u003e\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "\u003cnote\u003e\u003cto\u003eTest\u003c/to\u003e\u003c/note\u003e",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 367925977,
              "status": "passed"
            },
            "line": 21,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1150244292,
              "status": "passed"
            },
            "line": 22,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5816965,
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:86)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat org.junit.Assert.assertTrue(Assert.java:52)\r\n\tat se.iths.stepDefs.MimicStepDef.the_request_has_the_mime_type(MimicStepDef.java:113)\r\n\tat ✽.Then the request \"XML\" has the mime type \"application/xml;\"(se/iths/testGUI/ResponseForm.feature:23)\r\n",
              "status": "failed"
            },
            "line": 23,
            "name": "the request \"XML\" has the mime type \"application/xml;\"",
            "match": {
              "arguments": [
                {
                  "val": "XML",
                  "offset": 13
                },
                {
                  "val": "application/xml;",
                  "offset": 37
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 16,
            "name": "@ResponseForm112"
          },
          {
            "line": 1,
            "name": "@ResponseFormFeature"
          }
        ]
      },
      {
        "line": 30,
        "name": "Store mime type response with auto recognition",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-auto-recognition;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2902061607,
              "status": "passed"
            },
            "line": 18,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4818624382,
              "status": "passed"
            },
            "line": 19,
            "name": "I open the browser with the request \"HTML\"",
            "match": {
              "arguments": [
                {
                  "val": "HTML",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2973871878,
              "status": "passed"
            },
            "line": 20,
            "name": "I input \"\u003chtml\u003eDet här är HTML\u003c/html\u003e\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "\u003chtml\u003eDet här är HTML\u003c/html\u003e",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 515270609,
              "status": "passed"
            },
            "line": 21,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 967454546,
              "status": "passed"
            },
            "line": 22,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7094439,
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:86)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat org.junit.Assert.assertTrue(Assert.java:52)\r\n\tat se.iths.stepDefs.MimicStepDef.the_request_has_the_mime_type(MimicStepDef.java:113)\r\n\tat ✽.Then the request \"HTML\" has the mime type \"text/html;\"(se/iths/testGUI/ResponseForm.feature:23)\r\n",
              "status": "failed"
            },
            "line": 23,
            "name": "the request \"HTML\" has the mime type \"text/html;\"",
            "match": {
              "arguments": [
                {
                  "val": "HTML",
                  "offset": 13
                },
                {
                  "val": "text/html;",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 16,
            "name": "@ResponseForm112"
          },
          {
            "line": 1,
            "name": "@ResponseFormFeature"
          }
        ]
      },
      {
        "line": 45,
        "name": "Store mime type response with manual type set",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-manual-type-set;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2841682131,
              "status": "passed"
            },
            "line": 35,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7236970615,
              "status": "passed"
            },
            "line": 36,
            "name": "I open the browser with the request \"TEXT\"",
            "match": {
              "arguments": [
                {
                  "val": "TEXT",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1066253481,
              "status": "passed"
            },
            "line": 37,
            "name": "I set mime type as \"TEXT\"",
            "match": {
              "arguments": [
                {
                  "val": "TEXT",
                  "offset": 20
                }
              ],
              "location": "SeleniumStepDef.i_set_mime_type_as(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2630481797,
              "status": "passed"
            },
            "line": 38,
            "name": "I input \"TextMime\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "TextMime",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 479301455,
              "status": "passed"
            },
            "line": 39,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1660463683,
              "status": "passed"
            },
            "line": 40,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10052782,
              "status": "passed"
            },
            "line": 41,
            "name": "the request \"TEXT\" has the mime type \"text/plain;\"",
            "match": {
              "arguments": [
                {
                  "val": "TEXT",
                  "offset": 13
                },
                {
                  "val": "text/plain;",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 33,
            "name": "@ResponseForm113"
          },
          {
            "line": 1,
            "name": "@ResponseFormFeature"
          }
        ]
      },
      {
        "line": 46,
        "name": "Store mime type response with manual type set",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-manual-type-set;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2961376587,
              "status": "passed"
            },
            "line": 35,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8274252535,
              "status": "passed"
            },
            "line": 36,
            "name": "I open the browser with the request \"JSON\"",
            "match": {
              "arguments": [
                {
                  "val": "JSON",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 937046287,
              "status": "passed"
            },
            "line": 37,
            "name": "I set mime type as \"JSON\"",
            "match": {
              "arguments": [
                {
                  "val": "JSON",
                  "offset": 20
                }
              ],
              "location": "SeleniumStepDef.i_set_mime_type_as(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2728763668,
              "status": "passed"
            },
            "line": 38,
            "name": "I input \"{ /\u0027name/\u0027:/\u0027John/\u0027, /\u0027age/\u0027:30 }\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "{ /\u0027name/\u0027:/\u0027John/\u0027, /\u0027age/\u0027:30 }",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 363126724,
              "status": "passed"
            },
            "line": 39,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1053628924,
              "status": "passed"
            },
            "line": 40,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5426704,
              "status": "passed"
            },
            "line": 41,
            "name": "the request \"JSON\" has the mime type \"application/json;\"",
            "match": {
              "arguments": [
                {
                  "val": "JSON",
                  "offset": 13
                },
                {
                  "val": "application/json;",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 33,
            "name": "@ResponseForm113"
          },
          {
            "line": 1,
            "name": "@ResponseFormFeature"
          }
        ]
      },
      {
        "line": 47,
        "name": "Store mime type response with manual type set",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-manual-type-set;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3091344603,
              "status": "passed"
            },
            "line": 35,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6025325442,
              "status": "passed"
            },
            "line": 36,
            "name": "I open the browser with the request \"XML\"",
            "match": {
              "arguments": [
                {
                  "val": "XML",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 508314053,
              "status": "passed"
            },
            "line": 37,
            "name": "I set mime type as \"XML\"",
            "match": {
              "arguments": [
                {
                  "val": "XML",
                  "offset": 20
                }
              ],
              "location": "SeleniumStepDef.i_set_mime_type_as(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2828767444,
              "status": "passed"
            },
            "line": 38,
            "name": "I input \"\u003cnote\u003e\u003cto\u003eTest\u003c/to\u003e\u003c/note\u003e\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "\u003cnote\u003e\u003cto\u003eTest\u003c/to\u003e\u003c/note\u003e",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 377927052,
              "status": "passed"
            },
            "line": 39,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1134987225,
              "status": "passed"
            },
            "line": 40,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6550702,
              "status": "passed"
            },
            "line": 41,
            "name": "the request \"XML\" has the mime type \"application/xml;\"",
            "match": {
              "arguments": [
                {
                  "val": "XML",
                  "offset": 13
                },
                {
                  "val": "application/xml;",
                  "offset": 37
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 33,
            "name": "@ResponseForm113"
          },
          {
            "line": 1,
            "name": "@ResponseFormFeature"
          }
        ]
      },
      {
        "line": 48,
        "name": "Store mime type response with manual type set",
        "description": "",
        "id": "the-gui-response-form-stores-requests-and-automatically;store-mime-type-response-with-manual-type-set;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2908421898,
              "status": "passed"
            },
            "line": 35,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4614406456,
              "status": "passed"
            },
            "line": 36,
            "name": "I open the browser with the request \"HTML\"",
            "match": {
              "arguments": [
                {
                  "val": "HTML",
                  "offset": 37
                }
              ],
              "location": "SeleniumStepDef.i_open_the_url(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 572140618,
              "status": "passed"
            },
            "line": 37,
            "name": "I set mime type as \"HTML\"",
            "match": {
              "arguments": [
                {
                  "val": "HTML",
                  "offset": 20
                }
              ],
              "location": "SeleniumStepDef.i_set_mime_type_as(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2632543074,
              "status": "passed"
            },
            "line": 38,
            "name": "I input \"\u003chtml\u003e Det här är HTML \u003c/html\u003e\" in the response form",
            "match": {
              "arguments": [
                {
                  "val": "\u003chtml\u003e Det här är HTML \u003c/html\u003e",
                  "offset": 9
                }
              ],
              "location": "SeleniumStepDef.i_input_in_the_response_form(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 350492729,
              "status": "passed"
            },
            "line": 39,
            "name": "I press the learn button",
            "match": {
              "location": "SeleniumStepDef.i_press_the_learn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 952440007,
              "status": "passed"
            },
            "line": 40,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5571975,
              "status": "passed"
            },
            "line": 41,
            "name": "the request \"HTML\" has the mime type \"text/html;\"",
            "match": {
              "arguments": [
                {
                  "val": "HTML",
                  "offset": 13
                },
                {
                  "val": "text/html;",
                  "offset": 38
                }
              ],
              "location": "MimicStepDef.the_request_has_the_mime_type(String,String)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 33,
            "name": "@ResponseForm113"
          },
          {
            "line": 1,
            "name": "@ResponseFormFeature"
          }
        ]
      }
    ],
    "name": "The GUI response form stores requests and automatically",
    "description": "\t\t recognises mime type of request",
    "id": "the-gui-response-form-stores-requests-and-automatically",
    "keyword": "Feature",
    "uri": "se/iths/testGUI/ResponseForm.feature",
    "tags": [
      {
        "line": 1,
        "name": "@ResponseFormFeature"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 37,
            "value": "#New test case sprint 6"
          }
        ],
        "line": 39,
        "name": "Click on requests in ViewRequests to view the response",
        "description": "",
        "id": "stored-requests-are-visible-in-the-overview-returned-by-/viewrequests;click-on-requests-in-viewrequests-to-view-the-response",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2976450219,
              "status": "passed"
            },
            "line": 40,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12805260752,
              "status": "passed"
            },
            "line": 41,
            "name": "I open the browser",
            "match": {
              "location": "SeleniumStepDef.i_open_the_browser()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5985205007,
              "status": "passed"
            },
            "line": 42,
            "name": "I teach Mimic the below requests and responses",
            "match": {
              "location": "SeleniumStepDef.i_teach_Mimic_the_below_requests_and_responses(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "request",
                  "response"
                ],
                "line": 43
              },
              {
                "cells": [
                  "I",
                  "drink"
                ],
                "line": 44
              },
              {
                "cells": [
                  "your",
                  "milkshake"
                ],
                "line": 45
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 246542035,
              "status": "passed"
            },
            "line": 46,
            "name": "I make a /viewRequests request",
            "match": {
              "location": "SeleniumStepDef.i_make_a_viewRequests_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 757684344,
              "status": "passed"
            },
            "line": 47,
            "name": "all requests below are clickable and displays the corresponding response",
            "match": {
              "location": "SeleniumStepDef.all_requests_below_are_clickable(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "request",
                  "response"
                ],
                "line": 48
              },
              {
                "cells": [
                  "I",
                  "drink"
                ],
                "line": 49
              },
              {
                "cells": [
                  "your",
                  "milkshake"
                ],
                "line": 50
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 938447694,
              "status": "passed"
            },
            "line": 51,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 38,
            "name": "@ViewRequests114"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 53,
            "value": "#New test case sprint 6"
          }
        ],
        "line": 55,
        "name": "A request with multiple states displays the selected",
        "description": "\t\t\tstates response when clicked",
        "id": "stored-requests-are-visible-in-the-overview-returned-by-/viewrequests;a-request-with-multiple-states-displays-the-selected",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2923514818,
              "status": "passed"
            },
            "line": 57,
            "name": "that the mimicService is running",
            "match": {
              "location": "MimicStepDef.that_the_mimicService_is_running()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8967358520,
              "status": "passed"
            },
            "line": 58,
            "name": "I open the browser",
            "match": {
              "location": "SeleniumStepDef.i_open_the_browser()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8668896332,
              "status": "passed"
            },
            "line": 59,
            "name": "I add the states below to the request \"numbers\"",
            "match": {
              "arguments": [
                {
                  "val": "numbers",
                  "offset": 39
                }
              ],
              "location": "SeleniumStepDef.i_add_the_states_bellow_to_the_request(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "state"
                ],
                "line": 60
              },
              {
                "cells": [
                  "one"
                ],
                "line": 61
              },
              {
                "cells": [
                  "two"
                ],
                "line": 62
              },
              {
                "cells": [
                  "three"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 216600775,
              "status": "passed"
            },
            "line": 64,
            "name": "I make a /viewRequests request",
            "match": {
              "location": "SeleniumStepDef.i_make_a_viewRequests_request()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 212348543,
              "status": "passed"
            },
            "line": 65,
            "name": "I click state \"3\" in the viewRequests overview",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 15
                }
              ],
              "location": "SeleniumStepDef.i_click_state_in_viewRequests(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58470034,
              "error_message": "org.junit.ComparisonFailure: expected:\u003c[thre]e\u003e but was:\u003c[on]e\u003e\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat se.iths.stepDefs.SeleniumStepDef.is_displayed(SeleniumStepDef.java:151)\r\n\tat ✽.Then \"three\" is displayed(se/iths/testGUI/ViewRequests.feature:66)\r\n",
              "status": "failed"
            },
            "line": 66,
            "name": "\"three\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "three",
                  "offset": 1
                }
              ],
              "location": "SeleniumStepDef.is_displayed(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 67,
            "name": "the browser is closed",
            "match": {
              "location": "SeleniumStepDef.i_close_the_browser()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 54,
            "name": "@ViewRequests115"
          }
        ]
      }
    ],
    "name": "Stored requests are visible in the overview returned by /viewRequests",
    "description": "",
    "id": "stored-requests-are-visible-in-the-overview-returned-by-/viewrequests",
    "keyword": "Feature",
    "uri": "se/iths/testGUI/ViewRequests.feature",
    "tags": [
      {
        "line": 1,
        "name": "@ViewRequestsFeature"
      }
    ]
  }
]