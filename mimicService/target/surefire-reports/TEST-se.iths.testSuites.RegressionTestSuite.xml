<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="389" failures="28" name="se.iths.testSuites.RegressionTestSuite" time="0.145" errors="4" skipped="13">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_144\jre\bin"/>
    <property name="java.vm.version" value="25.144-b01"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="C:\Users\larss_000\.jenkins\workspace\RegressionTestSuiteMimicService"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=";"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.script" value=""/>
    <property name="user.country" value="SE"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="test" value="RegressionTestSuite.java"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="C:\Users\larss_000\.jenkins\workspace\RegressionTestSuiteMimicService"/>
    <property name="java.runtime.version" value="1.8.0_144-b01"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_144\jre\lib\endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\LARSS_~1\AppData\Local\Temp\"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="classworlds.conf" value="C:\Program Files\Apache Maven\apache-maven-3.5.2\bin\..\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Apache Maven\apache-maven-3.5.2\bin;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Users\larss_000\git\mimicTestMaven\mimicTests\commonFiles\maven\bin;C:\Users\larss_000\git\mimicTestMaven\mimicTests\commonFiles\maven\bin;C:\Program Files\Git\cmd;C:\Users\larss_000\AppData\Local\Microsoft\WindowsApps;;."/>
    <property name="maven.conf" value="C:\Program Files\Apache Maven\apache-maven-3.5.2\bin\../conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="library.jansi.path" value="C:\Program Files\Apache Maven\apache-maven-3.5.2\bin\..\lib\jansi-native"/>
    <property name="user.home" value="C:\Users\larss_000"/>
    <property name="user.timezone" value="Europe/Berlin"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="user.name" value="larss_000"/>
    <property name="java.class.path" value="C:\Program Files\Apache Maven\apache-maven-3.5.2\bin\..\boot\plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_144\jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -f C:\Users\larss_000\git\localMimicService\mimicService\pom.xml test -Dtest=RegressionTestSuite.java"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="sv"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_144"/>
    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext"/>
    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_144\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_144\jre\classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="C:\Program Files\Apache Maven\apache-maven-3.5.2\bin\.."/>
    <property name="file.separator" value="\"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="windows"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; |" name="Given that the mimicService is running" time="0.009"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; |" name="And that no requests are stored" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; |" name="When I teach the mock that &quot;1+1&quot; has response &quot;1&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; |" name="And I terminate the mimicService" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; |" name="And I start mimicService" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; |" name="Then &quot;1+1&quot; respondes with &quot;1&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; |" name="| &quot;1+1&quot; | &quot;1&quot; |" time="0"/>
  <testcase classname="Scenario: Store multiple requests and make same requests after reboot" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: Store multiple requests and make same requests after reboot" name="And that no requests are stored" time="0"/>
  <testcase classname="Scenario: Store multiple requests and make same requests after reboot" name="When I teach the mock the below questions and responses" time="0.001"/>
  <testcase classname="Scenario: Store multiple requests and make same requests after reboot" name="And I terminate the mimicService" time="0"/>
  <testcase classname="Scenario: Store multiple requests and make same requests after reboot" name="And I start mimicService" time="0"/>
  <testcase classname="Scenario: Store multiple requests and make same requests after reboot" name="Then every question below respondes with corresponding response" time="0.009">
    <failure message="expected:&lt;[&quot;4&quot;]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[&quot;4&quot;]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.every_question_respondes_with_correct_response(MimicStepDef.java:128)
	at âœ½.Then every question below respondes with corresponding response(se/iths/testAPI/BrainFile.feature:28)
</failure>
  </testcase>
  <testcase classname="Scenario: Store multiple requests and make same requests after reboot" name="Scenario: Store multiple requests and make same requests after reboot" time="0.011">
    <failure message="expected:&lt;[&quot;4&quot;]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[&quot;4&quot;]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.every_question_respondes_with_correct_response(MimicStepDef.java:128)
	at âœ½.Then every question below respondes with corresponding response(se/iths/testAPI/BrainFile.feature:28)
</failure>
  </testcase>
  <testcase classname="Scenario: KillMimic terminates the service" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: KillMimic terminates the service" name="When I terminate the mimicService" time="0"/>
  <testcase classname="Scenario: KillMimic terminates the service" name="Then &quot;1+1&quot; respondes with &quot;Error&quot;" time="0"/>
  <testcase classname="Scenario: KillMimic terminates the service" name="Scenario: KillMimic terminates the service" time="0"/>
  <testcase classname="Scenario: LearnNextResponse adds a response to a request" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: LearnNextResponse adds a response to a request" name="When I teach the mock that &quot;1+1&quot; has response &quot;2&quot;" time="0"/>
  <testcase classname="Scenario: LearnNextResponse adds a response to a request" name="Then &quot;1+1&quot; respondes with &quot;2&quot;" time="0"/>
  <testcase classname="Scenario: LearnNextResponse adds a response to a request" name="Scenario: LearnNextResponse adds a response to a request" time="0.011"/>
  <testcase classname="Scenario: Store sequense with LearnNextResponse and check that all" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: Store sequense with LearnNextResponse and check that all" name="And that no requests are stored" time="0"/>
  <testcase classname="Scenario: Store sequense with LearnNextResponse and check that all" name="When I teach the mock the below sequense" time="0"/>
  <testcase classname="Scenario: Store sequense with LearnNextResponse and check that all" name="And I call resetState" time="0"/>
  <testcase classname="Scenario: Store sequense with LearnNextResponse and check that all" name="Then every step in the stored sequense respondes with the stored response as below" time="0"/>
  <testcase classname="Scenario: Store sequense with LearnNextResponse and check that all" name="Scenario: Store sequense with LearnNextResponse and check that all" time="0.001"/>
  <testcase classname="| &quot;test/test&quot; | &quot;test&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;test/test&quot; | &quot;test&quot; |" name="When I teach the mock that &quot;test/test&quot; has response &quot;test&quot;" time="0"/>
  <testcase classname="| &quot;test/test&quot; | &quot;test&quot; |" name="Then &quot;test/test&quot; respondes with &quot;test&quot;" time="0"/>
  <testcase classname="| &quot;test/test&quot; | &quot;test&quot; |" name="| &quot;test/test&quot; | &quot;test&quot; |" time="0"/>
  <testcase classname="| &quot;te/te/te&quot; | &quot;test&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;te/te/te&quot; | &quot;test&quot; |" name="When I teach the mock that &quot;te/te/te&quot; has response &quot;test&quot;" time="0"/>
  <testcase classname="| &quot;te/te/te&quot; | &quot;test&quot; |" name="Then &quot;te/te/te&quot; respondes with &quot;test&quot;" time="0"/>
  <testcase classname="| &quot;te/te/te&quot; | &quot;test&quot; |" name="| &quot;te/te/te&quot; | &quot;test&quot; |" time="0"/>
  <testcase classname="| &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; | &quot;add?value1=1&amp;value2=2&quot; | &quot;3&quot; | &quot;add?value1=1&amp;value2=3&quot; | &quot;4&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; | &quot;add?value1=1&amp;value2=2&quot; | &quot;3&quot; | &quot;add?value1=1&amp;value2=3&quot; | &quot;4&quot; |" name="When I teach the mock that &quot;add?value1=1&amp;value2=1&quot; has response &quot;2&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; | &quot;add?value1=1&amp;value2=2&quot; | &quot;3&quot; | &quot;add?value1=1&amp;value2=3&quot; | &quot;4&quot; |" name="And I teach the mock that &quot;add?value1=1&amp;value2=2&quot; has response &quot;3&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; | &quot;add?value1=1&amp;value2=2&quot; | &quot;3&quot; | &quot;add?value1=1&amp;value2=3&quot; | &quot;4&quot; |" name="Then &quot;add?value1=1&amp;value2=3&quot; respondes with &quot;4&quot;" time="0">
    <failure message="expected:&lt;[4]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[4]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.respondes_with(MimicStepDef.java:73)
	at âœ½.Then &quot;add?value1=1&amp;value2=3&quot; respondes with &quot;4&quot;(se/iths/testAPI/MachineLearning.feature:10)
</failure>
  </testcase>
  <testcase classname="| &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; | &quot;add?value1=1&amp;value2=2&quot; | &quot;3&quot; | &quot;add?value1=1&amp;value2=3&quot; | &quot;4&quot; |" name="| &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; | &quot;add?value1=1&amp;value2=2&quot; | &quot;3&quot; | &quot;add?value1=1&amp;value2=3&quot; | &quot;4&quot; |" time="0">
    <failure message="expected:&lt;[4]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[4]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.respondes_with(MimicStepDef.java:73)
	at âœ½.Then &quot;add?value1=1&amp;value2=3&quot; respondes with &quot;4&quot;(se/iths/testAPI/MachineLearning.feature:10)
</failure>
  </testcase>
  <testcase classname="| &quot;sub?value1=5&amp;value2=1&quot; | &quot;4&quot; | &quot;sub?value1=5&amp;value2=2&quot; | &quot;3&quot; | &quot;sub?value1=5&amp;value2=3&quot; | &quot;2&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;sub?value1=5&amp;value2=1&quot; | &quot;4&quot; | &quot;sub?value1=5&amp;value2=2&quot; | &quot;3&quot; | &quot;sub?value1=5&amp;value2=3&quot; | &quot;2&quot; |" name="When I teach the mock that &quot;sub?value1=5&amp;value2=1&quot; has response &quot;4&quot;" time="0"/>
  <testcase classname="| &quot;sub?value1=5&amp;value2=1&quot; | &quot;4&quot; | &quot;sub?value1=5&amp;value2=2&quot; | &quot;3&quot; | &quot;sub?value1=5&amp;value2=3&quot; | &quot;2&quot; |" name="And I teach the mock that &quot;sub?value1=5&amp;value2=2&quot; has response &quot;3&quot;" time="0"/>
  <testcase classname="| &quot;sub?value1=5&amp;value2=1&quot; | &quot;4&quot; | &quot;sub?value1=5&amp;value2=2&quot; | &quot;3&quot; | &quot;sub?value1=5&amp;value2=3&quot; | &quot;2&quot; |" name="Then &quot;sub?value1=5&amp;value2=3&quot; respondes with &quot;2&quot;" time="0"/>
  <testcase classname="| &quot;sub?value1=5&amp;value2=1&quot; | &quot;4&quot; | &quot;sub?value1=5&amp;value2=2&quot; | &quot;3&quot; | &quot;sub?value1=5&amp;value2=3&quot; | &quot;2&quot; |" name="| &quot;sub?value1=5&amp;value2=1&quot; | &quot;4&quot; | &quot;sub?value1=5&amp;value2=2&quot; | &quot;3&quot; | &quot;sub?value1=5&amp;value2=3&quot; | &quot;2&quot; |" time="0"/>
  <testcase classname="| &quot;mult?value1=3&amp;value2=2&quot; | &quot;6&quot; | &quot;mult?value1=3&amp;value2=3&quot; | &quot;9&quot; | &quot;mult?value1=3&amp;value2=4&quot; | &quot;12&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;mult?value1=3&amp;value2=2&quot; | &quot;6&quot; | &quot;mult?value1=3&amp;value2=3&quot; | &quot;9&quot; | &quot;mult?value1=3&amp;value2=4&quot; | &quot;12&quot; |" name="When I teach the mock that &quot;mult?value1=3&amp;value2=2&quot; has response &quot;6&quot;" time="0"/>
  <testcase classname="| &quot;mult?value1=3&amp;value2=2&quot; | &quot;6&quot; | &quot;mult?value1=3&amp;value2=3&quot; | &quot;9&quot; | &quot;mult?value1=3&amp;value2=4&quot; | &quot;12&quot; |" name="And I teach the mock that &quot;mult?value1=3&amp;value2=3&quot; has response &quot;9&quot;" time="0"/>
  <testcase classname="| &quot;mult?value1=3&amp;value2=2&quot; | &quot;6&quot; | &quot;mult?value1=3&amp;value2=3&quot; | &quot;9&quot; | &quot;mult?value1=3&amp;value2=4&quot; | &quot;12&quot; |" name="Then &quot;mult?value1=3&amp;value2=4&quot; respondes with &quot;12&quot;" time="0"/>
  <testcase classname="| &quot;mult?value1=3&amp;value2=2&quot; | &quot;6&quot; | &quot;mult?value1=3&amp;value2=3&quot; | &quot;9&quot; | &quot;mult?value1=3&amp;value2=4&quot; | &quot;12&quot; |" name="| &quot;mult?value1=3&amp;value2=2&quot; | &quot;6&quot; | &quot;mult?value1=3&amp;value2=3&quot; | &quot;9&quot; | &quot;mult?value1=3&amp;value2=4&quot; | &quot;12&quot; |" time="0.016"/>
  <testcase classname="| &quot;div?value1=4&amp;value2=2&quot; | &quot;2&quot; | &quot;div?value1=60&amp;value2=20&quot; | &quot;3&quot; | &quot;div?value1=8&amp;value2=4&quot; | &quot;2&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;div?value1=4&amp;value2=2&quot; | &quot;2&quot; | &quot;div?value1=60&amp;value2=20&quot; | &quot;3&quot; | &quot;div?value1=8&amp;value2=4&quot; | &quot;2&quot; |" name="When I teach the mock that &quot;div?value1=4&amp;value2=2&quot; has response &quot;2&quot;" time="0"/>
  <testcase classname="| &quot;div?value1=4&amp;value2=2&quot; | &quot;2&quot; | &quot;div?value1=60&amp;value2=20&quot; | &quot;3&quot; | &quot;div?value1=8&amp;value2=4&quot; | &quot;2&quot; |" name="And I teach the mock that &quot;div?value1=60&amp;value2=20&quot; has response &quot;3&quot;" time="0"/>
  <testcase classname="| &quot;div?value1=4&amp;value2=2&quot; | &quot;2&quot; | &quot;div?value1=60&amp;value2=20&quot; | &quot;3&quot; | &quot;div?value1=8&amp;value2=4&quot; | &quot;2&quot; |" name="Then &quot;div?value1=8&amp;value2=4&quot; respondes with &quot;2&quot;" time="0"/>
  <testcase classname="| &quot;div?value1=4&amp;value2=2&quot; | &quot;2&quot; | &quot;div?value1=60&amp;value2=20&quot; | &quot;3&quot; | &quot;div?value1=8&amp;value2=4&quot; | &quot;2&quot; |" name="| &quot;div?value1=4&amp;value2=2&quot; | &quot;2&quot; | &quot;div?value1=60&amp;value2=20&quot; | &quot;3&quot; | &quot;div?value1=8&amp;value2=4&quot; | &quot;2&quot; |" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; | &quot;add?value1=1&amp;value2=2&quot; | &quot;3&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; | &quot;add?value1=1&amp;value2=2&quot; | &quot;3&quot; |" name="When I teach the mock that &quot;add?value1=10&amp;value2=20&quot; has response &quot;30&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; | &quot;add?value1=1&amp;value2=2&quot; | &quot;3&quot; |" name="And I teach the mock that &quot;add?value1=20&amp;value2=20&quot; has response &quot;40&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; | &quot;add?value1=1&amp;value2=2&quot; | &quot;3&quot; |" name="Then &quot;add?value1=1&amp;value2=2&quot; respondes with &quot;3&quot;" time="0">
    <failure message="expected:&lt;[3]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[3]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.respondes_with(MimicStepDef.java:73)
	at âœ½.Then &quot;add?value1=1&amp;value2=2&quot; respondes with &quot;3&quot;(se/iths/testAPI/MachineLearning.feature:25)
</failure>
  </testcase>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; | &quot;add?value1=1&amp;value2=2&quot; | &quot;3&quot; |" name="| &quot;add?value1=10&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; | &quot;add?value1=1&amp;value2=2&quot; | &quot;3&quot; |" time="0.001">
    <failure message="expected:&lt;[3]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[3]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.respondes_with(MimicStepDef.java:73)
	at âœ½.Then &quot;add?value1=1&amp;value2=2&quot; respondes with &quot;3&quot;(se/iths/testAPI/MachineLearning.feature:25)
</failure>
  </testcase>
  <testcase classname="| &quot;add?value1=15&amp;value2=15&quot; | &quot;30&quot; | &quot;add?value1=25&amp;value2=25&quot; | &quot;50&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;add?value1=15&amp;value2=15&quot; | &quot;30&quot; | &quot;add?value1=25&amp;value2=25&quot; | &quot;50&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" name="When I teach the mock that &quot;add?value1=15&amp;value2=15&quot; has response &quot;30&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=15&amp;value2=15&quot; | &quot;30&quot; | &quot;add?value1=25&amp;value2=25&quot; | &quot;50&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" name="And I teach the mock that &quot;add?value1=25&amp;value2=25&quot; has response &quot;50&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=15&amp;value2=15&quot; | &quot;30&quot; | &quot;add?value1=25&amp;value2=25&quot; | &quot;50&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" name="Then &quot;add?value1=1&amp;value2=1&quot; respondes with &quot;2&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=15&amp;value2=15&quot; | &quot;30&quot; | &quot;add?value1=25&amp;value2=25&quot; | &quot;50&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" name="| &quot;add?value1=15&amp;value2=15&quot; | &quot;30&quot; | &quot;add?value1=25&amp;value2=25&quot; | &quot;50&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" time="0"/>
  <testcase classname="| &quot;add?value1=26&amp;value2=16&quot; | &quot;42&quot; | &quot;add?value1=36&amp;value2=46&quot; | &quot;82&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;add?value1=26&amp;value2=16&quot; | &quot;42&quot; | &quot;add?value1=36&amp;value2=46&quot; | &quot;82&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" name="When I teach the mock that &quot;add?value1=26&amp;value2=16&quot; has response &quot;42&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=26&amp;value2=16&quot; | &quot;42&quot; | &quot;add?value1=36&amp;value2=46&quot; | &quot;82&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" name="And I teach the mock that &quot;add?value1=36&amp;value2=46&quot; has response &quot;82&quot;" time="0.001"/>
  <testcase classname="| &quot;add?value1=26&amp;value2=16&quot; | &quot;42&quot; | &quot;add?value1=36&amp;value2=46&quot; | &quot;82&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" name="Then &quot;add?value1=1&amp;value2=1&quot; respondes with &quot;2&quot;" time="0.001"/>
  <testcase classname="| &quot;add?value1=26&amp;value2=16&quot; | &quot;42&quot; | &quot;add?value1=36&amp;value2=46&quot; | &quot;82&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" name="| &quot;add?value1=26&amp;value2=16&quot; | &quot;42&quot; | &quot;add?value1=36&amp;value2=46&quot; | &quot;82&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" time="0.001"/>
  <testcase classname="| &quot;add?value1=111&amp;value2=111&quot; | &quot;222&quot; | &quot;add?value1=222&amp;value2=222&quot; | &quot;444&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;add?value1=111&amp;value2=111&quot; | &quot;222&quot; | &quot;add?value1=222&amp;value2=222&quot; | &quot;444&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" name="When I teach the mock that &quot;add?value1=111&amp;value2=111&quot; has response &quot;222&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=111&amp;value2=111&quot; | &quot;222&quot; | &quot;add?value1=222&amp;value2=222&quot; | &quot;444&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" name="And I teach the mock that &quot;add?value1=222&amp;value2=222&quot; has response &quot;444&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=111&amp;value2=111&quot; | &quot;222&quot; | &quot;add?value1=222&amp;value2=222&quot; | &quot;444&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" name="Then &quot;add?value1=1&amp;value2=1&quot; respondes with &quot;2&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=111&amp;value2=111&quot; | &quot;222&quot; | &quot;add?value1=222&amp;value2=222&quot; | &quot;444&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" name="| &quot;add?value1=111&amp;value2=111&quot; | &quot;222&quot; | &quot;add?value1=222&amp;value2=222&quot; | &quot;444&quot; | &quot;add?value1=1&amp;value2=1&quot; | &quot;2&quot; |" time="0"/>
  <testcase classname="Scenario: Calling with format &quot;/text?param&quot;" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: Calling with format &quot;/text?param&quot;" name="When I make the request &quot;test?ett&quot;" time="0"/>
  <testcase classname="Scenario: Calling with format &quot;/text?param&quot;" name="Then &quot;test?ett&quot; returns the response form" time="0"/>
  <testcase classname="Scenario: Calling with format &quot;/text?param&quot;" name="Scenario: Calling with format &quot;/text?param&quot;" time="0"/>
  <testcase classname="Scenario: Learn how to calculate add while alternating with mult" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: Learn how to calculate add while alternating with mult" name="When I teach the mock that &quot;add?value1=1&amp;value2=2&quot; has response &quot;3&quot;" time="0"/>
  <testcase classname="Scenario: Learn how to calculate add while alternating with mult" name="And I teach the mock that &quot;mult?value1=3&amp;value2=2&quot; has response &quot;6&quot;" time="0"/>
  <testcase classname="Scenario: Learn how to calculate add while alternating with mult" name="And I teach the mock that &quot;add?value1=1&amp;value2=1&quot; has response &quot;2&quot;" time="0"/>
  <testcase classname="Scenario: Learn how to calculate add while alternating with mult" name="Then &quot;add?value1=1&amp;value2=3&quot; respondes with &quot;4&quot;" time="0"/>
  <testcase classname="Scenario: Learn how to calculate add while alternating with mult" name="Scenario: Learn how to calculate add while alternating with mult" time="0"/>
  <testcase classname="Scenario: UnlearnAllResponses removes all learned formats" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: UnlearnAllResponses removes all learned formats" name="And that the mock has learned &quot;add?value1=1&amp;value2=2&quot; with &quot;3&quot;" time="0"/>
  <testcase classname="Scenario: UnlearnAllResponses removes all learned formats" name="And that the mock has learned &quot;add?value1=1&amp;value2=1&quot; with &quot;2&quot;" time="0"/>
  <testcase classname="Scenario: UnlearnAllResponses removes all learned formats" name="And &quot;add?value1=1&amp;value2=3&quot; respondes with &quot;4&quot;" time="0"/>
  <testcase classname="Scenario: UnlearnAllResponses removes all learned formats" name="When I write unlearnAllResponses in url" time="0"/>
  <testcase classname="Scenario: UnlearnAllResponses removes all learned formats" name="Then &quot;add?value1=1&amp;value2=3&quot; returns the response form" time="0.003"/>
  <testcase classname="Scenario: UnlearnAllResponses removes all learned formats" name="Scenario: UnlearnAllResponses removes all learned formats" time="0.003"/>
  <testcase classname="Scenario: Terminating Mimic does not remove learned formats" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: Terminating Mimic does not remove learned formats" name="And that the mock has learned &quot;add?value1=1&amp;value2=2&quot; with &quot;3&quot;" time="0"/>
  <testcase classname="Scenario: Terminating Mimic does not remove learned formats" name="And that the mock has learned &quot;add?value1=1&amp;value2=1&quot; with &quot;2&quot;" time="0"/>
  <testcase classname="Scenario: Terminating Mimic does not remove learned formats" name="And &quot;add?value1=1&amp;value2=3&quot; respondes with &quot;4&quot;" time="0"/>
  <testcase classname="Scenario: Terminating Mimic does not remove learned formats" name="When I terminate the mimicService" time="0"/>
  <testcase classname="Scenario: Terminating Mimic does not remove learned formats" name="And I start mimicService" time="0"/>
  <testcase classname="Scenario: Terminating Mimic does not remove learned formats" name="Then &quot;add?value1=1&amp;value2=3&quot; respondes with &quot;4&quot;" time="0"/>
  <testcase classname="Scenario: Terminating Mimic does not remove learned formats" name="Scenario: Terminating Mimic does not remove learned formats" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=10&quot; | &quot;20&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=10&quot; | &quot;20&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" name="When I teach the mock that &quot;add?value1=10&amp;value2=10&quot; has response &quot;20&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=10&quot; | &quot;20&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" name="And I teach the mock that &quot;add?value1=20&amp;value2=20&quot; has response &quot;40&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=10&quot; | &quot;20&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" name="And &quot;add?value1=1&amp;value2=2&quot; does not responde with &quot;3&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=10&quot; | &quot;20&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" name="When I teach the mock that &quot;add?value1=1&amp;value2=2&quot; has response &quot;3&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=10&quot; | &quot;20&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" name="Then &quot;add?value1=1&amp;value2=3&quot; respondes with &quot;4&quot;" time="0.002">
    <failure message="expected:&lt;[4]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[4]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.respondes_with(MimicStepDef.java:73)
	at âœ½.Then &quot;add?value1=1&amp;value2=3&quot; respondes with &quot;4&quot;(se/iths/testAPI/MachineLearning.feature:75)
</failure>
  </testcase>
  <testcase classname="| &quot;add?value1=10&amp;value2=10&quot; | &quot;20&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" name="| &quot;add?value1=10&amp;value2=10&quot; | &quot;20&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" time="0.002">
    <failure message="expected:&lt;[4]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[4]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.respondes_with(MimicStepDef.java:73)
	at âœ½.Then &quot;add?value1=1&amp;value2=3&quot; respondes with &quot;4&quot;(se/iths/testAPI/MachineLearning.feature:75)
</failure>
  </testcase>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" name="When I teach the mock that &quot;add?value1=10&amp;value2=20&quot; has response &quot;30&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" name="And I teach the mock that &quot;add?value1=20&amp;value2=20&quot; has response &quot;40&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" name="And &quot;add?value1=1&amp;value2=2&quot; does not responde with &quot;3&quot;" time="0">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertFalse(Assert.java:64)
	at org.junit.Assert.assertFalse(Assert.java:74)
	at se.iths.stepDefs.MimicStepDef.does_not_responde_with(MimicStepDef.java:85)
	at âœ½.And &quot;add?value1=1&amp;value2=2&quot; does not responde with &quot;3&quot;(se/iths/testAPI/MachineLearning.feature:73)
</failure>
  </testcase>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" name="| &quot;add?value1=10&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" time="0.001">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertFalse(Assert.java:64)
	at org.junit.Assert.assertFalse(Assert.java:74)
	at se.iths.stepDefs.MimicStepDef.does_not_responde_with(MimicStepDef.java:85)
	at âœ½.And &quot;add?value1=1&amp;value2=2&quot; does not responde with &quot;3&quot;(se/iths/testAPI/MachineLearning.feature:73)
</failure>
  </testcase>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" name="When I teach the mock that &quot;add?value1=1&amp;value2=2&quot; has response &quot;3&quot;" time="0.001">
    <skipped/>
  </testcase>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;40&quot; |" name="Then &quot;add?value1=1&amp;value2=3&quot; respondes with &quot;4&quot;" time="0.001">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: Mimic can learn how to respond with complex responses" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: Mimic can learn how to respond with complex responses" name="And that the mock has learned &quot;montlyCost?TotalCost=10000&amp;Months=10&quot; with &quot;{ &apos;TotalCost&apos;: 10000,&apos;MontlyCost&apos;: 1000,&apos;Months&apos;: 10;}&quot;" time="0"/>
  <testcase classname="Scenario: Mimic can learn how to respond with complex responses" name="And that the mock has learned &quot;montlyCost?TotalCost=20000&amp;Months=10&quot; with &quot;{ &apos;TotalCost&apos;: 20000,&apos;MontlyCost&apos;: 2000,&apos;Months&apos;: 10;}&quot;" time="0"/>
  <testcase classname="Scenario: Mimic can learn how to respond with complex responses" name="Then &quot;montlyCost?TotalCost=30000&amp;Months=10&quot; respondes with &quot;{ &apos;TotalCost&apos;: 30000,&apos;MontlyCost&apos;: 3000,&apos;Months&apos;: 10;}&quot;" time="0"/>
  <testcase classname="Scenario: Mimic can learn how to respond with complex responses" name="Scenario: Mimic can learn how to respond with complex responses" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;15&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=1&amp;value2=2&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;15&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=1&amp;value2=2&quot; |" name="When I teach the mock that &quot;add?value1=10&amp;value2=20&quot; has response &quot;15&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;15&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=1&amp;value2=2&quot; |" name="And I teach the mock that &quot;add?value1=20&amp;value2=20&quot; has response &quot;30&quot;" time="0"/>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;15&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=1&amp;value2=2&quot; |" name="Then &quot;add?value1=1&amp;value2=2&quot; returns the response form" time="0">
    <failure message="expected:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt; but was:&lt;[0]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt; but was:&lt;[0]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.returns_the_response_form(MimicStepDef.java:44)
	at âœ½.Then &quot;add?value1=1&amp;value2=2&quot; returns the response form(se/iths/testAPI/MachineLearning.feature:94)
</failure>
  </testcase>
  <testcase classname="| &quot;add?value1=10&amp;value2=20&quot; | &quot;15&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=1&amp;value2=2&quot; |" name="| &quot;add?value1=10&amp;value2=20&quot; | &quot;15&quot; | &quot;add?value1=20&amp;value2=20&quot; | &quot;30&quot; | &quot;add?value1=1&amp;value2=2&quot; |" time="0.001">
    <failure message="expected:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt; but was:&lt;[0]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt; but was:&lt;[0]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.returns_the_response_form(MimicStepDef.java:44)
	at âœ½.Then &quot;add?value1=1&amp;value2=2&quot; returns the response form(se/iths/testAPI/MachineLearning.feature:94)
</failure>
  </testcase>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; |" name="And that the mock has learned &quot;1+1&quot; with &quot;2&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; |" name="When I call resetState" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; |" name="Then &quot;1+1&quot; respondes with &quot;2&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; |" name="| &quot;1+1&quot; | &quot;2&quot; |" time="0.001"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; | &quot;6&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; | &quot;6&quot; |" name="And that the mock has learned &quot;1+1&quot; with &quot;2&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; | &quot;6&quot; |" name="And that the mock has learned &quot;1+1&quot; with &quot;4&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; | &quot;6&quot; |" name="And that the mock has learned &quot;1+1&quot; with &quot;6&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; | &quot;6&quot; |" name="When I call resetState" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; | &quot;6&quot; |" name="Then &quot;1+1&quot; respondes with &quot;2&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; | &quot;6&quot; |" name="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; | &quot;6&quot; |" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; |" name="And that the mock has learned &quot;1+1&quot; with &quot;2&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; |" name="And that the mock has learned &quot;1+1&quot; with &quot;4&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; |" name="And that the mock has learned &quot;1+1&quot; with &quot;2&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; |" name="When I call resetState" time="0.002"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; |" name="Then &quot;1+1&quot; respondes with &quot;2&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; |" name="| &quot;1+1&quot; | &quot;2&quot; | &quot;4&quot; |" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;2+2&quot; | &quot;4&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;2+2&quot; | &quot;4&quot; |" name="And that the mock has learned &quot;1+1&quot; with &quot;2&quot;" time="0.001">
    <failure message="expected:&lt;[2]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[2]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(MimicStepDef.java:33)
	at âœ½.And that the mock has learned &quot;1+1&quot; with &quot;2&quot;(se/iths/testAPI/UnlearnAllResponses.feature:7)
</failure>
  </testcase>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;2+2&quot; | &quot;4&quot; |" name="| &quot;1+1&quot; | &quot;2&quot; | &quot;2+2&quot; | &quot;4&quot; |" time="0.001">
    <failure message="expected:&lt;[2]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[2]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.that_the_mock_has_learned_questionOne_with_responseOne(MimicStepDef.java:33)
	at âœ½.And that the mock has learned &quot;1+1&quot; with &quot;2&quot;(se/iths/testAPI/UnlearnAllResponses.feature:7)
</failure>
  </testcase>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;2+2&quot; | &quot;4&quot; |" name="And that the mock has learned &quot;2+2&quot; with &quot;4&quot;" time="0.001">
    <skipped/>
  </testcase>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;2+2&quot; | &quot;4&quot; |" name="When I write unlearnAllResponses in url" time="0.007">
    <skipped/>
  </testcase>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;2+2&quot; | &quot;4&quot; |" name="Then the mock unlearns &quot;1+1&quot;" time="0.007">
    <skipped/>
  </testcase>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; | &quot;2+2&quot; | &quot;4&quot; |" name="And the mock unlearns &quot;2+2&quot;" time="0.007">
    <skipped/>
  </testcase>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; |" name="And that the mock has learned &quot;1+1&quot; with &quot;2&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; |" name="When I write unlearnAllResponses in url" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; |" name="Then the mock unlearns &quot;1+1&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;2&quot; |" name="| &quot;1+1&quot; | &quot;2&quot; |" time="0"/>
  <testcase classname="Scenario: Unlearn all with no requests stored" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: Unlearn all with no requests stored" name="And that no requests are stored" time="0"/>
  <testcase classname="Scenario: Unlearn all with no requests stored" name="When I write unlearnAllResponses in url" time="0"/>
  <testcase classname="Scenario: Unlearn all with no requests stored" name="Then the mock shows error message" time="0">
    <failure message="expected:&lt;[Nothing to unlearn]&gt; but was:&lt;[All responses unlearned]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[Nothing to unlearn]&gt; but was:&lt;[All responses unlearned]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.the_mock_shows_error_message(MimicStepDef.java:61)
	at âœ½.Then the mock shows error message(se/iths/testAPI/UnlearnAllResponses.feature:33)
</failure>
  </testcase>
  <testcase classname="Scenario: Unlearn all with no requests stored" name="Scenario: Unlearn all with no requests stored" time="0.001">
    <failure message="expected:&lt;[Nothing to unlearn]&gt; but was:&lt;[All responses unlearned]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[Nothing to unlearn]&gt; but was:&lt;[All responses unlearned]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.the_mock_shows_error_message(MimicStepDef.java:61)
	at âœ½.Then the mock shows error message(se/iths/testAPI/UnlearnAllResponses.feature:33)
</failure>
  </testcase>
  <testcase classname="Scenario: UnlearnResponse removes the current and following states" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: UnlearnResponse removes the current and following states" name="And that no requests are stored" time="0"/>
  <testcase classname="Scenario: UnlearnResponse removes the current and following states" name="When I teach the mock the below sequense" time="0"/>
  <testcase classname="Scenario: UnlearnResponse removes the current and following states" name="And I call resetState" time="0"/>
  <testcase classname="Scenario: UnlearnResponse removes the current and following states" name="And I make the request &quot;1+1&quot;" time="0.001"/>
  <testcase classname="Scenario: UnlearnResponse removes the current and following states" name="And I make the request &quot;1+1&quot;" time="0"/>
  <testcase classname="Scenario: UnlearnResponse removes the current and following states" name="And I make the request &quot;1+1&quot;" time="0"/>
  <testcase classname="Scenario: UnlearnResponse removes the current and following states" name="And I call unlearnResponse" time="0"/>
  <testcase classname="Scenario: UnlearnResponse removes the current and following states" name="And I make the request &quot;1+1&quot;" time="0"/>
  <testcase classname="Scenario: UnlearnResponse removes the current and following states" name="Then &quot;1+1&quot; respondes with &quot;3&quot;" time="0">
    <failure message="expected:&lt;[3]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[3]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.respondes_with(MimicStepDef.java:73)
	at âœ½.Then &quot;1+1&quot; respondes with &quot;3&quot;(se/iths/testAPI/UnlearnResponse.feature:20)
</failure>
  </testcase>
  <testcase classname="Scenario: UnlearnResponse removes the current and following states" name="Scenario: UnlearnResponse removes the current and following states" time="0">
    <failure message="expected:&lt;[3]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[3]&gt; but was:&lt;[Paste or type json, xml, html or text response to learn and press Learn&lt;br&gt;&lt;br&gt;&lt;form action=&quot;/learnresponse&quot; method=&quot;post&quot;&gt;&lt;select name=&apos;mime&apos;&gt;&lt;option value=&apos;auto&apos;&gt;Auto&lt;/option&gt;&lt;option value=&apos;application/json&apos;&gt;JSON&lt;/option&gt;&lt;option value=&apos;application/xml&apos;&gt;XML&lt;/option&gt;&lt;option value=&apos;text/html&apos;&gt;HTML&lt;/option&gt;&lt;option value=&apos;text/plain&apos;&gt;Text&lt;/option&gt;&lt;/select&gt;&lt;br&gt;&lt;textarea name=&apos;text&apos; rows=&apos;30&apos; cols=&apos;150&apos;&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; id=&apos;learn&apos; value=&quot;Learn&quot;&gt;&lt;/form&gt;]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.MimicStepDef.respondes_with(MimicStepDef.java:73)
	at âœ½.Then &quot;1+1&quot; respondes with &quot;3&quot;(se/iths/testAPI/UnlearnResponse.feature:20)
</failure>
  </testcase>
  <testcase classname="Scenario: Unlearn question with one state" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: Unlearn question with one state" name="And that the mock has learned &quot;1+1&quot; with &quot;2&quot;" time="0"/>
  <testcase classname="Scenario: Unlearn question with one state" name="When I call unlearnResponse" time="0"/>
  <testcase classname="Scenario: Unlearn question with one state" name="Then &quot;1+1&quot; returns the response form" time="0"/>
  <testcase classname="Scenario: Unlearn question with one state" name="Scenario: Unlearn question with one state" time="0"/>
  <testcase classname="Scenario: UnlearnResponse does not affect other stored responses" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: UnlearnResponse does not affect other stored responses" name="When I teach the mock that &quot;1+1&quot; has response &quot;2&quot;" time="0"/>
  <testcase classname="Scenario: UnlearnResponse does not affect other stored responses" name="And I teach the mock that &quot;2+2&quot; has response &quot;4&quot;" time="0"/>
  <testcase classname="Scenario: UnlearnResponse does not affect other stored responses" name="And I teach the mock that &quot;3+3&quot; has response &quot;6&quot;" time="0"/>
  <testcase classname="Scenario: UnlearnResponse does not affect other stored responses" name="And I make the request &quot;2+2&quot;" time="0"/>
  <testcase classname="Scenario: UnlearnResponse does not affect other stored responses" name="And I call unlearnResponse" time="0"/>
  <testcase classname="Scenario: UnlearnResponse does not affect other stored responses" name="Then &quot;2+2&quot; returns the response form" time="0"/>
  <testcase classname="Scenario: UnlearnResponse does not affect other stored responses" name="And &quot;1+1&quot; respondes with &quot;2&quot;" time="0"/>
  <testcase classname="Scenario: UnlearnResponse does not affect other stored responses" name="And &quot;3+3&quot; respondes with &quot;6&quot;" time="0"/>
  <testcase classname="Scenario: UnlearnResponse does not affect other stored responses" name="Scenario: UnlearnResponse does not affect other stored responses" time="0"/>
  <testcase classname="Scenario: UnlearnResponse removes response from last stored request" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: UnlearnResponse removes response from last stored request" name="When I teach the mock that &quot;1+1&quot; has response &quot;2+2&quot;" time="0"/>
  <testcase classname="Scenario: UnlearnResponse removes response from last stored request" name="And I call unlearnResponse" time="0"/>
  <testcase classname="Scenario: UnlearnResponse removes response from last stored request" name="Then &quot;1+1&quot; returns the response form" time="0"/>
  <testcase classname="Scenario: UnlearnResponse removes response from last stored request" name="Scenario: UnlearnResponse removes response from last stored request" time="0"/>
  <testcase classname="Scenario: addResponse adds states to request" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: addResponse adds states to request" name="When I open the browser with the request &quot;numbers&quot;" time="0"/>
  <testcase classname="Scenario: addResponse adds states to request" name="And I input &quot;1&quot; in the response form and press the Learn button" time="0"/>
  <testcase classname="Scenario: addResponse adds states to request" name="And I enter the request &quot;1+1&quot;" time="0"/>
  <testcase classname="Scenario: addResponse adds states to request" name="And I make an /addResponse request" time="0"/>
  <testcase classname="Scenario: addResponse adds states to request" name="And I input &quot;2&quot; in the response form" time="0"/>
  <testcase classname="Scenario: addResponse adds states to request" name="And I press the learn button" time="0"/>
  <testcase classname="Scenario: addResponse adds states to request" name="And I make a /resetState request" time="0"/>
  <testcase classname="Scenario: addResponse adds states to request" name="And I enter the request &quot;1+1&quot;" time="0"/>
  <testcase classname="Scenario: addResponse adds states to request" name="Then &quot;2&quot; is displayed" time="0">
    <failure message="expected:&lt;[2]&gt; but was:&lt;[Det hÃ¤r Ã¤r HTML]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[2]&gt; but was:&lt;[Det hÃ¤r Ã¤r HTML]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.SeleniumStepDef.is_displayed(SeleniumStepDef.java:151)
	at âœ½.Then &quot;2&quot; is displayed(se/iths/testGUI/AddResponse.feature:15)
</failure>
  </testcase>
  <testcase classname="Scenario: addResponse adds states to request" name="Scenario: addResponse adds states to request" time="0">
    <failure message="expected:&lt;[2]&gt; but was:&lt;[Det hÃ¤r Ã¤r HTML]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[2]&gt; but was:&lt;[Det hÃ¤r Ã¤r HTML]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.SeleniumStepDef.is_displayed(SeleniumStepDef.java:151)
	at âœ½.Then &quot;2&quot; is displayed(se/iths/testGUI/AddResponse.feature:15)
</failure>
  </testcase>
  <testcase classname="Scenario: addResponse adds states to request" name="And the browser is closed" time="0">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: addResponse works after relearning a state in the middle of a sequense" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: addResponse works after relearning a state in the middle of a sequense" name="When I open the browser with the request &quot;numbers&quot;" time="0"/>
  <testcase classname="Scenario: addResponse works after relearning a state in the middle of a sequense" name="And I input &quot;1&quot; in the response form and press the Learn button" time="0"/>
  <testcase classname="Scenario: addResponse works after relearning a state in the middle of a sequense" name="And I add the states below to the request &quot;numbers&quot;" time="0"/>
  <testcase classname="Scenario: addResponse works after relearning a state in the middle of a sequense" name="And I make a /resetState request" time="0"/>
  <testcase classname="Scenario: addResponse works after relearning a state in the middle of a sequense" name="And I enter the request &quot;numbers&quot; &quot;2&quot; times" time="0"/>
  <testcase classname="Scenario: addResponse works after relearning a state in the middle of a sequense" name="And I make a /relearnResponse request" time="0"/>
  <testcase classname="Scenario: addResponse works after relearning a state in the middle of a sequense" name="And I input &quot;2&quot; in the response form and press the Learn button" time="0"/>
  <testcase classname="Scenario: addResponse works after relearning a state in the middle of a sequense" name="And I make an /addResponse request" time="0"/>
  <testcase classname="Scenario: addResponse works after relearning a state in the middle of a sequense" name="And I input &quot;4&quot; in the response form" time="0">
    <error message="no such element: Unable to locate element: {&quot;method&quot;:&quot;xpath&quot;,&quot;selector&quot;:&quot;/html/body/form/textarea&quot;}
  (Session info: chrome=66.0.3359.139)
  (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &apos;3.11.0&apos;, revision: &apos;e59cfb3&apos;, time: &apos;2018-03-11T20:26:55.152Z&apos;
System info: host: &apos;LAPTOP-1A0S11AO&apos;, ip: &apos;192.168.1.161&apos;, os.name: &apos;Windows 10&apos;, os.arch: &apos;amd64&apos;, os.version: &apos;10.0&apos;, java.version: &apos;1.8.0_144&apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.38.552522 (437e6fbedfa876..., userDataDir: C:\Users\LARSS_~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.139, webStorageEnabled: true}
Session ID: 3cda6a4924d859b53e8e0accd77a0a08
*** Element info: {Using=xpath, value=/html/body/form/textarea}" type="org.openqa.selenium.NoSuchElementException">org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {&quot;method&quot;:&quot;xpath&quot;,&quot;selector&quot;:&quot;/html/body/form/textarea&quot;}
  (Session info: chrome=66.0.3359.139)
  (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &apos;3.11.0&apos;, revision: &apos;e59cfb3&apos;, time: &apos;2018-03-11T20:26:55.152Z&apos;
System info: host: &apos;LAPTOP-1A0S11AO&apos;, ip: &apos;192.168.1.161&apos;, os.name: &apos;Windows 10&apos;, os.arch: &apos;amd64&apos;, os.version: &apos;10.0&apos;, java.version: &apos;1.8.0_144&apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.38.552522 (437e6fbedfa876..., userDataDir: C:\Users\LARSS_~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.139, webStorageEnabled: true}
Session ID: 3cda6a4924d859b53e8e0accd77a0a08
*** Element info: {Using=xpath, value=/html/body/form/textarea}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:319)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:421)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:311)
	at se.iths.helpers.MimicGuiSelenium.sendText(MimicGuiSelenium.java:35)
	at se.iths.stepDefs.SeleniumStepDef.i_input_in_the_response_form(SeleniumStepDef.java:65)
	at âœ½.And I input &quot;4&quot; in the response form(se/iths/testGUI/AddResponse.feature:32)
</error>
  </testcase>
  <testcase classname="Scenario: addResponse works after relearning a state in the middle of a sequense" name="Scenario: addResponse works after relearning a state in the middle of a sequense" time="0.003">
    <error message="no such element: Unable to locate element: {&quot;method&quot;:&quot;xpath&quot;,&quot;selector&quot;:&quot;/html/body/form/textarea&quot;}
  (Session info: chrome=66.0.3359.139)
  (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &apos;3.11.0&apos;, revision: &apos;e59cfb3&apos;, time: &apos;2018-03-11T20:26:55.152Z&apos;
System info: host: &apos;LAPTOP-1A0S11AO&apos;, ip: &apos;192.168.1.161&apos;, os.name: &apos;Windows 10&apos;, os.arch: &apos;amd64&apos;, os.version: &apos;10.0&apos;, java.version: &apos;1.8.0_144&apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.38.552522 (437e6fbedfa876..., userDataDir: C:\Users\LARSS_~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.139, webStorageEnabled: true}
Session ID: 3cda6a4924d859b53e8e0accd77a0a08
*** Element info: {Using=xpath, value=/html/body/form/textarea}" type="org.openqa.selenium.NoSuchElementException">org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {&quot;method&quot;:&quot;xpath&quot;,&quot;selector&quot;:&quot;/html/body/form/textarea&quot;}
  (Session info: chrome=66.0.3359.139)
  (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &apos;3.11.0&apos;, revision: &apos;e59cfb3&apos;, time: &apos;2018-03-11T20:26:55.152Z&apos;
System info: host: &apos;LAPTOP-1A0S11AO&apos;, ip: &apos;192.168.1.161&apos;, os.name: &apos;Windows 10&apos;, os.arch: &apos;amd64&apos;, os.version: &apos;10.0&apos;, java.version: &apos;1.8.0_144&apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.38.552522 (437e6fbedfa876..., userDataDir: C:\Users\LARSS_~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.139, webStorageEnabled: true}
Session ID: 3cda6a4924d859b53e8e0accd77a0a08
*** Element info: {Using=xpath, value=/html/body/form/textarea}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:319)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:421)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:311)
	at se.iths.helpers.MimicGuiSelenium.sendText(MimicGuiSelenium.java:35)
	at se.iths.stepDefs.SeleniumStepDef.i_input_in_the_response_form(SeleniumStepDef.java:65)
	at âœ½.And I input &quot;4&quot; in the response form(se/iths/testGUI/AddResponse.feature:32)
</error>
  </testcase>
  <testcase classname="Scenario: addResponse works after relearning a state in the middle of a sequense" name="And I enter the request &quot;numbers&quot;" time="0.004">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: addResponse works after relearning a state in the middle of a sequense" name="Then &quot;2&quot; is displayed" time="0.004">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: addResponse works after relearning a state in the middle of a sequense" name="And the browser is closed" time="0.004">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: addResponse adds state to the end of a request when the current" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: addResponse adds state to the end of a request when the current" name="When I open the browser with the request &quot;numbers&quot;" time="0"/>
  <testcase classname="Scenario: addResponse adds state to the end of a request when the current" name="And I input &quot;1&quot; in the response form and press the Learn button" time="0"/>
  <testcase classname="Scenario: addResponse adds state to the end of a request when the current" name="And I add the states below to the request &quot;numbers&quot;" time="0"/>
  <testcase classname="Scenario: addResponse adds state to the end of a request when the current" name="And I make a /resetState request" time="0.001"/>
  <testcase classname="Scenario: addResponse adds state to the end of a request when the current" name="And I make an /addResponse request" time="0"/>
  <testcase classname="Scenario: addResponse adds state to the end of a request when the current" name="And I input &quot;4&quot; in the response form and press the Learn button" time="0.001"/>
  <testcase classname="Scenario: addResponse adds state to the end of a request when the current" name="And I enter the request &quot;numbers&quot; &quot;4&quot; times" time="0"/>
  <testcase classname="Scenario: addResponse adds state to the end of a request when the current" name="Then &quot;4&quot; is displayed" time="0"/>
  <testcase classname="Scenario: addResponse adds state to the end of a request when the current" name="And the browser is closed" time="0"/>
  <testcase classname="Scenario: addResponse adds state to the end of a request when the current" name="Scenario: addResponse adds state to the end of a request when the current" time="0"/>
  <testcase classname="Scenario: LearnNextResponse without paramaters" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: LearnNextResponse without paramaters" name="And I open the browser with the request &quot;LearnNextResponse&quot;" time="0"/>
  <testcase classname="Scenario: LearnNextResponse without paramaters" name="And I input &quot;4&quot; in the response form and press the Learn button" time="0">
    <error message="no such element: Unable to locate element: {&quot;method&quot;:&quot;xpath&quot;,&quot;selector&quot;:&quot;/html/body/form/textarea&quot;}
  (Session info: chrome=66.0.3359.139)
  (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &apos;3.11.0&apos;, revision: &apos;e59cfb3&apos;, time: &apos;2018-03-11T20:26:55.152Z&apos;
System info: host: &apos;LAPTOP-1A0S11AO&apos;, ip: &apos;192.168.1.161&apos;, os.name: &apos;Windows 10&apos;, os.arch: &apos;amd64&apos;, os.version: &apos;10.0&apos;, java.version: &apos;1.8.0_144&apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.38.552522 (437e6fbedfa876..., userDataDir: C:\Users\LARSS_~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.139, webStorageEnabled: true}
Session ID: f0902460e4ad9d574e70d24c941e3e78
*** Element info: {Using=xpath, value=/html/body/form/textarea}" type="org.openqa.selenium.NoSuchElementException">org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {&quot;method&quot;:&quot;xpath&quot;,&quot;selector&quot;:&quot;/html/body/form/textarea&quot;}
  (Session info: chrome=66.0.3359.139)
  (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &apos;3.11.0&apos;, revision: &apos;e59cfb3&apos;, time: &apos;2018-03-11T20:26:55.152Z&apos;
System info: host: &apos;LAPTOP-1A0S11AO&apos;, ip: &apos;192.168.1.161&apos;, os.name: &apos;Windows 10&apos;, os.arch: &apos;amd64&apos;, os.version: &apos;10.0&apos;, java.version: &apos;1.8.0_144&apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.38.552522 (437e6fbedfa876..., userDataDir: C:\Users\LARSS_~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.139, webStorageEnabled: true}
Session ID: f0902460e4ad9d574e70d24c941e3e78
*** Element info: {Using=xpath, value=/html/body/form/textarea}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:319)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:421)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:311)
	at se.iths.helpers.MimicGuiSelenium.sendText(MimicGuiSelenium.java:35)
	at se.iths.stepDefs.SeleniumStepDef.i_input_in_the_response_form_and_press_learn(SeleniumStepDef.java:71)
	at âœ½.And I input &quot;4&quot; in the response form and press the Learn button(se/iths/testGUI/GUILearnNextResponse.feature:10)
</error>
  </testcase>
  <testcase classname="Scenario: LearnNextResponse without paramaters" name="Scenario: LearnNextResponse without paramaters" time="0">
    <error message="no such element: Unable to locate element: {&quot;method&quot;:&quot;xpath&quot;,&quot;selector&quot;:&quot;/html/body/form/textarea&quot;}
  (Session info: chrome=66.0.3359.139)
  (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &apos;3.11.0&apos;, revision: &apos;e59cfb3&apos;, time: &apos;2018-03-11T20:26:55.152Z&apos;
System info: host: &apos;LAPTOP-1A0S11AO&apos;, ip: &apos;192.168.1.161&apos;, os.name: &apos;Windows 10&apos;, os.arch: &apos;amd64&apos;, os.version: &apos;10.0&apos;, java.version: &apos;1.8.0_144&apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.38.552522 (437e6fbedfa876..., userDataDir: C:\Users\LARSS_~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.139, webStorageEnabled: true}
Session ID: f0902460e4ad9d574e70d24c941e3e78
*** Element info: {Using=xpath, value=/html/body/form/textarea}" type="org.openqa.selenium.NoSuchElementException">org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {&quot;method&quot;:&quot;xpath&quot;,&quot;selector&quot;:&quot;/html/body/form/textarea&quot;}
  (Session info: chrome=66.0.3359.139)
  (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &apos;3.11.0&apos;, revision: &apos;e59cfb3&apos;, time: &apos;2018-03-11T20:26:55.152Z&apos;
System info: host: &apos;LAPTOP-1A0S11AO&apos;, ip: &apos;192.168.1.161&apos;, os.name: &apos;Windows 10&apos;, os.arch: &apos;amd64&apos;, os.version: &apos;10.0&apos;, java.version: &apos;1.8.0_144&apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.38.552522 (437e6fbedfa876..., userDataDir: C:\Users\LARSS_~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.139, webStorageEnabled: true}
Session ID: f0902460e4ad9d574e70d24c941e3e78
*** Element info: {Using=xpath, value=/html/body/form/textarea}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:319)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:421)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:311)
	at se.iths.helpers.MimicGuiSelenium.sendText(MimicGuiSelenium.java:35)
	at se.iths.stepDefs.SeleniumStepDef.i_input_in_the_response_form_and_press_learn(SeleniumStepDef.java:71)
	at âœ½.And I input &quot;4&quot; in the response form and press the Learn button(se/iths/testGUI/GUILearnNextResponse.feature:10)
</error>
  </testcase>
  <testcase classname="Scenario: LearnNextResponse without paramaters" name="And I enter the request &quot;2+2&quot;" time="0">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: LearnNextResponse without paramaters" name="Then &quot;2+2&quot; respondes with &quot;4&quot;" time="0">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: Calling the same request when at end of a sequense" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: Calling the same request when at end of a sequense" name="When I open the browser" time="0"/>
  <testcase classname="Scenario: Calling the same request when at end of a sequense" name="And I add the states below to the request &quot;numbers&quot;" time="0"/>
  <testcase classname="Scenario: Calling the same request when at end of a sequense" name="And I make a /resetState request" time="0"/>
  <testcase classname="Scenario: Calling the same request when at end of a sequense" name="And I enter the request &quot;numbers&quot; &quot;4&quot; times" time="0"/>
  <testcase classname="Scenario: Calling the same request when at end of a sequense" name="And I make an /unlearnResponse request" time="0"/>
  <testcase classname="Scenario: Calling the same request when at end of a sequense" name="And I enter the request &quot;numbers&quot;" time="0"/>
  <testcase classname="Scenario: Calling the same request when at end of a sequense" name="Then &quot;2&quot; is displayed" time="0"/>
  <testcase classname="Scenario: Calling the same request when at end of a sequense" name="And the browser is closed" time="0"/>
  <testcase classname="Scenario: Calling the same request when at end of a sequense" name="Scenario: Calling the same request when at end of a sequense" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in Chrome" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in Chrome" name="When I open the url &quot;learnNextResponse?text=2&quot; in Chrome" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in Chrome" name="And I enter the request &quot;1+1&quot; &quot;2&quot; times" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in Chrome" name="Then &quot;2&quot; is displayed" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in Chrome" name="And the browser is closed" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in Chrome" name="Scenario: LearnNextResponse in Chrome" time="0.012"/>
  <testcase classname="Scenario: LearnNextResponse in FireFox" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in FireFox" name="When I open the url &quot;learnNextResponse?text=2&quot; in FireFox" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in FireFox" name="And I enter the request &quot;1+1&quot; &quot;2&quot; times" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in FireFox" name="Then &quot;2&quot; is displayed" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in FireFox" name="And the browser is closed" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in FireFox" name="Scenario: LearnNextResponse in FireFox" time="0.003"/>
  <testcase classname="Scenario: LearnNextResponse in Edge" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in Edge" name="When I open the url &quot;learnNextResponse?text=2&quot; in Edge" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in Edge" name="And I enter the request &quot;1+1&quot; &quot;2&quot; times" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in Edge" name="Then &quot;2&quot; is displayed" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in Edge" name="And the browser is closed" time="0"/>
  <testcase classname="Scenario: LearnNextResponse in Edge" name="Scenario: LearnNextResponse in Edge" time="0.001"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; | &quot;2&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; | &quot;2&quot; |" name="When I open the browser with the request &quot;1+1&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; | &quot;2&quot; |" name="And I input &quot;1&quot; in the response form and press the Learn button" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; | &quot;2&quot; |" name="And I enter the request &quot;1+1&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; | &quot;2&quot; |" name="And I make a /relearnResponse request" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; | &quot;2&quot; |" name="And I input &quot;2&quot; in the response form and press the Learn button" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; | &quot;2&quot; |" name="And I enter the request &quot;1+1&quot;" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; | &quot;2&quot; |" name="Then &quot;2&quot; is displayed" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; | &quot;2&quot; |" name="And the browser is closed" time="0"/>
  <testcase classname="| &quot;1+1&quot; | &quot;1&quot; | &quot;2&quot; |" name="| &quot;1+1&quot; | &quot;1&quot; | &quot;2&quot; |" time="0"/>
  <testcase classname="Scenario: Relearn edits the last requested state in a sequense" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: Relearn edits the last requested state in a sequense" name="And the mock has learned the below sequense" time="0"/>
  <testcase classname="Scenario: Relearn edits the last requested state in a sequense" name="When I call resetState" time="0"/>
  <testcase classname="Scenario: Relearn edits the last requested state in a sequense" name="And I open the browser with the request &quot;ABC&quot;" time="0"/>
  <testcase classname="Scenario: Relearn edits the last requested state in a sequense" name="And I enter the request &quot;ABC&quot;" time="0"/>
  <testcase classname="Scenario: Relearn edits the last requested state in a sequense" name="And I make a /relearnResponse request" time="0"/>
  <testcase classname="Scenario: Relearn edits the last requested state in a sequense" name="And I input &quot;B&quot; in the response form" time="0"/>
  <testcase classname="Scenario: Relearn edits the last requested state in a sequense" name="And I press the learn button" time="0"/>
  <testcase classname="Scenario: Relearn edits the last requested state in a sequense" name="And I make a /resetState request" time="0"/>
  <testcase classname="Scenario: Relearn edits the last requested state in a sequense" name="And I enter the request &quot;ABC&quot; &quot;2&quot; times" time="0"/>
  <testcase classname="Scenario: Relearn edits the last requested state in a sequense" name="Then &quot;B&quot; is displayed" time="0"/>
  <testcase classname="Scenario: Relearn edits the last requested state in a sequense" name="And the browser is closed" time="0"/>
  <testcase classname="Scenario: Relearn edits the last requested state in a sequense" name="Scenario: Relearn edits the last requested state in a sequense" time="0.001"/>
  <testcase classname="Scenario: Store a request with response form" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: Store a request with response form" name="When I open the browser with the request &quot;2+2&quot;" time="0"/>
  <testcase classname="Scenario: Store a request with response form" name="And I input &quot;4&quot; in the response form and press the Learn button" time="0"/>
  <testcase classname="Scenario: Store a request with response form" name="And I enter the request &quot;2+2&quot;" time="0"/>
  <testcase classname="Scenario: Store a request with response form" name="Then &quot;4&quot; is displayed" time="0"/>
  <testcase classname="Scenario: Store a request with response form" name="And the browser is closed" time="0.001"/>
  <testcase classname="Scenario: Store a request with response form" name="Scenario: Store a request with response form" time="0.001"/>
  <testcase classname="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" name="When I open the browser with the request &quot;TEXT&quot;" time="0"/>
  <testcase classname="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" name="And I input &quot;TextMime&quot; in the response form" time="0"/>
  <testcase classname="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" name="And I press the learn button" time="0"/>
  <testcase classname="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" name="And the browser is closed" time="0"/>
  <testcase classname="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" name="Then the request &quot;TEXT&quot; has the mime type &quot;text/plain;&quot;" time="0"/>
  <testcase classname="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" name="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" time="0"/>
  <testcase classname="| &quot;JSON&quot; | &quot;{ &apos;name&apos;:&apos;John&apos;, &apos;age&apos;:30 }&quot; | &quot;application/json;&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;JSON&quot; | &quot;{ &apos;name&apos;:&apos;John&apos;, &apos;age&apos;:30 }&quot; | &quot;application/json;&quot; |" name="When I open the browser with the request &quot;JSON&quot;" time="0"/>
  <testcase classname="| &quot;JSON&quot; | &quot;{ &apos;name&apos;:&apos;John&apos;, &apos;age&apos;:30 }&quot; | &quot;application/json;&quot; |" name="And I input &quot;{ &apos;name&apos;:&apos;John&apos;, &apos;age&apos;:30 }&quot; in the response form" time="0"/>
  <testcase classname="| &quot;JSON&quot; | &quot;{ &apos;name&apos;:&apos;John&apos;, &apos;age&apos;:30 }&quot; | &quot;application/json;&quot; |" name="And I press the learn button" time="0"/>
  <testcase classname="| &quot;JSON&quot; | &quot;{ &apos;name&apos;:&apos;John&apos;, &apos;age&apos;:30 }&quot; | &quot;application/json;&quot; |" name="And the browser is closed" time="0"/>
  <testcase classname="| &quot;JSON&quot; | &quot;{ &apos;name&apos;:&apos;John&apos;, &apos;age&apos;:30 }&quot; | &quot;application/json;&quot; |" name="Then the request &quot;JSON&quot; has the mime type &quot;application/json;&quot;" time="0">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at se.iths.stepDefs.MimicStepDef.the_request_has_the_mime_type(MimicStepDef.java:102)
	at âœ½.Then the request &quot;JSON&quot; has the mime type &quot;application/json;&quot;(se/iths/testGUI/ResponseForm.feature:23)
</failure>
  </testcase>
  <testcase classname="| &quot;JSON&quot; | &quot;{ &apos;name&apos;:&apos;John&apos;, &apos;age&apos;:30 }&quot; | &quot;application/json;&quot; |" name="| &quot;JSON&quot; | &quot;{ &apos;name&apos;:&apos;John&apos;, &apos;age&apos;:30 }&quot; | &quot;application/json;&quot; |" time="0">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at se.iths.stepDefs.MimicStepDef.the_request_has_the_mime_type(MimicStepDef.java:102)
	at âœ½.Then the request &quot;JSON&quot; has the mime type &quot;application/json;&quot;(se/iths/testGUI/ResponseForm.feature:23)
</failure>
  </testcase>
  <testcase classname="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" name="When I open the browser with the request &quot;XML&quot;" time="0"/>
  <testcase classname="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" name="And I input &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; in the response form" time="0"/>
  <testcase classname="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" name="And I press the learn button" time="0"/>
  <testcase classname="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" name="And the browser is closed" time="0"/>
  <testcase classname="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" name="Then the request &quot;XML&quot; has the mime type &quot;application/xml;&quot;" time="0">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at se.iths.stepDefs.MimicStepDef.the_request_has_the_mime_type(MimicStepDef.java:102)
	at âœ½.Then the request &quot;XML&quot; has the mime type &quot;application/xml;&quot;(se/iths/testGUI/ResponseForm.feature:23)
</failure>
  </testcase>
  <testcase classname="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" name="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" time="0">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at se.iths.stepDefs.MimicStepDef.the_request_has_the_mime_type(MimicStepDef.java:102)
	at âœ½.Then the request &quot;XML&quot; has the mime type &quot;application/xml;&quot;(se/iths/testGUI/ResponseForm.feature:23)
</failure>
  </testcase>
  <testcase classname="| &quot;HTML&quot; | &quot;&lt;html&gt;Det hÃ¤r Ã¤r HTML&lt;/html&gt;&quot; | &quot;text/html;&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;HTML&quot; | &quot;&lt;html&gt;Det hÃ¤r Ã¤r HTML&lt;/html&gt;&quot; | &quot;text/html;&quot; |" name="When I open the browser with the request &quot;HTML&quot;" time="0"/>
  <testcase classname="| &quot;HTML&quot; | &quot;&lt;html&gt;Det hÃ¤r Ã¤r HTML&lt;/html&gt;&quot; | &quot;text/html;&quot; |" name="And I input &quot;&lt;html&gt;Det hÃ¤r Ã¤r HTML&lt;/html&gt;&quot; in the response form" time="0"/>
  <testcase classname="| &quot;HTML&quot; | &quot;&lt;html&gt;Det hÃ¤r Ã¤r HTML&lt;/html&gt;&quot; | &quot;text/html;&quot; |" name="And I press the learn button" time="0"/>
  <testcase classname="| &quot;HTML&quot; | &quot;&lt;html&gt;Det hÃ¤r Ã¤r HTML&lt;/html&gt;&quot; | &quot;text/html;&quot; |" name="And the browser is closed" time="0"/>
  <testcase classname="| &quot;HTML&quot; | &quot;&lt;html&gt;Det hÃ¤r Ã¤r HTML&lt;/html&gt;&quot; | &quot;text/html;&quot; |" name="Then the request &quot;HTML&quot; has the mime type &quot;text/html;&quot;" time="0">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at se.iths.stepDefs.MimicStepDef.the_request_has_the_mime_type(MimicStepDef.java:102)
	at âœ½.Then the request &quot;HTML&quot; has the mime type &quot;text/html;&quot;(se/iths/testGUI/ResponseForm.feature:23)
</failure>
  </testcase>
  <testcase classname="| &quot;HTML&quot; | &quot;&lt;html&gt;Det hÃ¤r Ã¤r HTML&lt;/html&gt;&quot; | &quot;text/html;&quot; |" name="| &quot;HTML&quot; | &quot;&lt;html&gt;Det hÃ¤r Ã¤r HTML&lt;/html&gt;&quot; | &quot;text/html;&quot; |" time="0">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at se.iths.stepDefs.MimicStepDef.the_request_has_the_mime_type(MimicStepDef.java:102)
	at âœ½.Then the request &quot;HTML&quot; has the mime type &quot;text/html;&quot;(se/iths/testGUI/ResponseForm.feature:23)
</failure>
  </testcase>
  <testcase classname="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" name="When I open the browser with the request &quot;TEXT&quot;" time="0"/>
  <testcase classname="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" name="And I set mime type as &quot;TEXT&quot;" time="0"/>
  <testcase classname="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" name="And I input &quot;TextMime&quot; in the response form" time="0"/>
  <testcase classname="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" name="And I press the learn button" time="0"/>
  <testcase classname="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" name="And the browser is closed" time="0"/>
  <testcase classname="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" name="Then the request &quot;TEXT&quot; has the mime type &quot;text/plain;&quot;" time="0"/>
  <testcase classname="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" name="| &quot;TEXT&quot; | &quot;TextMime&quot; | &quot;text/plain;&quot; |" time="0"/>
  <testcase classname="| &quot;JSON&quot; | &quot;{ /&apos;name/&apos;:/&apos;John/&apos;, /&apos;age/&apos;:30 }&quot; | &quot;application/json;&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;JSON&quot; | &quot;{ /&apos;name/&apos;:/&apos;John/&apos;, /&apos;age/&apos;:30 }&quot; | &quot;application/json;&quot; |" name="When I open the browser with the request &quot;JSON&quot;" time="0"/>
  <testcase classname="| &quot;JSON&quot; | &quot;{ /&apos;name/&apos;:/&apos;John/&apos;, /&apos;age/&apos;:30 }&quot; | &quot;application/json;&quot; |" name="And I set mime type as &quot;JSON&quot;" time="0"/>
  <testcase classname="| &quot;JSON&quot; | &quot;{ /&apos;name/&apos;:/&apos;John/&apos;, /&apos;age/&apos;:30 }&quot; | &quot;application/json;&quot; |" name="And I input &quot;{ /&apos;name/&apos;:/&apos;John/&apos;, /&apos;age/&apos;:30 }&quot; in the response form" time="0"/>
  <testcase classname="| &quot;JSON&quot; | &quot;{ /&apos;name/&apos;:/&apos;John/&apos;, /&apos;age/&apos;:30 }&quot; | &quot;application/json;&quot; |" name="And I press the learn button" time="0"/>
  <testcase classname="| &quot;JSON&quot; | &quot;{ /&apos;name/&apos;:/&apos;John/&apos;, /&apos;age/&apos;:30 }&quot; | &quot;application/json;&quot; |" name="And the browser is closed" time="0"/>
  <testcase classname="| &quot;JSON&quot; | &quot;{ /&apos;name/&apos;:/&apos;John/&apos;, /&apos;age/&apos;:30 }&quot; | &quot;application/json;&quot; |" name="Then the request &quot;JSON&quot; has the mime type &quot;application/json;&quot;" time="0"/>
  <testcase classname="| &quot;JSON&quot; | &quot;{ /&apos;name/&apos;:/&apos;John/&apos;, /&apos;age/&apos;:30 }&quot; | &quot;application/json;&quot; |" name="| &quot;JSON&quot; | &quot;{ /&apos;name/&apos;:/&apos;John/&apos;, /&apos;age/&apos;:30 }&quot; | &quot;application/json;&quot; |" time="0"/>
  <testcase classname="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" name="When I open the browser with the request &quot;XML&quot;" time="0"/>
  <testcase classname="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" name="And I set mime type as &quot;XML&quot;" time="0"/>
  <testcase classname="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" name="And I input &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; in the response form" time="0"/>
  <testcase classname="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" name="And I press the learn button" time="0"/>
  <testcase classname="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" name="And the browser is closed" time="0"/>
  <testcase classname="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" name="Then the request &quot;XML&quot; has the mime type &quot;application/xml;&quot;" time="0"/>
  <testcase classname="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" name="| &quot;XML&quot; | &quot;&lt;note&gt;&lt;to&gt;Test&lt;/to&gt;&lt;/note&gt;&quot; | &quot;application/xml;&quot; |" time="0.001"/>
  <testcase classname="| &quot;HTML&quot; | &quot;&lt;html&gt; Det hÃ¤r Ã¤r HTML &lt;/html&gt;&quot; | &quot;text/html;&quot; |" name="Given that the mimicService is running" time="0"/>
  <testcase classname="| &quot;HTML&quot; | &quot;&lt;html&gt; Det hÃ¤r Ã¤r HTML &lt;/html&gt;&quot; | &quot;text/html;&quot; |" name="When I open the browser with the request &quot;HTML&quot;" time="0"/>
  <testcase classname="| &quot;HTML&quot; | &quot;&lt;html&gt; Det hÃ¤r Ã¤r HTML &lt;/html&gt;&quot; | &quot;text/html;&quot; |" name="And I set mime type as &quot;HTML&quot;" time="0"/>
  <testcase classname="| &quot;HTML&quot; | &quot;&lt;html&gt; Det hÃ¤r Ã¤r HTML &lt;/html&gt;&quot; | &quot;text/html;&quot; |" name="And I input &quot;&lt;html&gt; Det hÃ¤r Ã¤r HTML &lt;/html&gt;&quot; in the response form" time="0.001"/>
  <testcase classname="| &quot;HTML&quot; | &quot;&lt;html&gt; Det hÃ¤r Ã¤r HTML &lt;/html&gt;&quot; | &quot;text/html;&quot; |" name="And I press the learn button" time="0"/>
  <testcase classname="| &quot;HTML&quot; | &quot;&lt;html&gt; Det hÃ¤r Ã¤r HTML &lt;/html&gt;&quot; | &quot;text/html;&quot; |" name="And the browser is closed" time="0"/>
  <testcase classname="| &quot;HTML&quot; | &quot;&lt;html&gt; Det hÃ¤r Ã¤r HTML &lt;/html&gt;&quot; | &quot;text/html;&quot; |" name="Then the request &quot;HTML&quot; has the mime type &quot;text/html;&quot;" time="0"/>
  <testcase classname="| &quot;HTML&quot; | &quot;&lt;html&gt; Det hÃ¤r Ã¤r HTML &lt;/html&gt;&quot; | &quot;text/html;&quot; |" name="| &quot;HTML&quot; | &quot;&lt;html&gt; Det hÃ¤r Ã¤r HTML &lt;/html&gt;&quot; | &quot;text/html;&quot; |" time="0.002"/>
  <testcase classname="Scenario: With one request stored it is visible in ViewRequests" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: With one request stored it is visible in ViewRequests" name="When I open the browser with the request &quot;numbers&quot;" time="0"/>
  <testcase classname="Scenario: With one request stored it is visible in ViewRequests" name="And I input &quot;1&quot; in the response form and press the Learn button" time="0"/>
  <testcase classname="Scenario: With one request stored it is visible in ViewRequests" name="And I make a /viewRequests request" time="0"/>
  <testcase classname="Scenario: With one request stored it is visible in ViewRequests" name="Then &quot;numbers&quot; is present in the overview" time="0"/>
  <testcase classname="Scenario: With one request stored it is visible in ViewRequests" name="And the browser is closed" time="0"/>
  <testcase classname="Scenario: With one request stored it is visible in ViewRequests" name="Scenario: With one request stored it is visible in ViewRequests" time="0"/>
  <testcase classname="Scenario: With multiple requests stored all are visible in ViewRequests" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: With multiple requests stored all are visible in ViewRequests" name="When I open the browser" time="0"/>
  <testcase classname="Scenario: With multiple requests stored all are visible in ViewRequests" name="And I teach Mimic the below requests and responses" time="0"/>
  <testcase classname="Scenario: With multiple requests stored all are visible in ViewRequests" name="And I make a /viewRequests request" time="0"/>
  <testcase classname="Scenario: With multiple requests stored all are visible in ViewRequests" name="Then all requests below are present in the overview" time="0"/>
  <testcase classname="Scenario: With multiple requests stored all are visible in ViewRequests" name="And the browser is closed" time="0"/>
  <testcase classname="Scenario: With multiple requests stored all are visible in ViewRequests" name="Scenario: With multiple requests stored all are visible in ViewRequests" time="0"/>
  <testcase classname="Scenario: Open view requests with no responses stored" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: Open view requests with no responses stored" name="And that no requests are stored" time="0"/>
  <testcase classname="Scenario: Open view requests with no responses stored" name="When I open the browser" time="0"/>
  <testcase classname="Scenario: Open view requests with no responses stored" name="And I make a /viewRequests request" time="0"/>
  <testcase classname="Scenario: Open view requests with no responses stored" name="Then &quot;No requests&quot; is displayed" time="0"/>
  <testcase classname="Scenario: Open view requests with no responses stored" name="And the browser is closed" time="0"/>
  <testcase classname="Scenario: Open view requests with no responses stored" name="Scenario: Open view requests with no responses stored" time="0"/>
  <testcase classname="Scenario: Click on requests in ViewRequests to view the response" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: Click on requests in ViewRequests to view the response" name="When I open the browser" time="0"/>
  <testcase classname="Scenario: Click on requests in ViewRequests to view the response" name="And I teach Mimic the below requests and responses" time="0"/>
  <testcase classname="Scenario: Click on requests in ViewRequests to view the response" name="And I make a /viewRequests request" time="0"/>
  <testcase classname="Scenario: Click on requests in ViewRequests to view the response" name="Then all requests below are clickable and displays the corresponding response" time="0"/>
  <testcase classname="Scenario: Click on requests in ViewRequests to view the response" name="And the browser is closed" time="0"/>
  <testcase classname="Scenario: Click on requests in ViewRequests to view the response" name="Scenario: Click on requests in ViewRequests to view the response" time="0"/>
  <testcase classname="Scenario: A request with multiple states displays the selected" name="Given that the mimicService is running" time="0"/>
  <testcase classname="Scenario: A request with multiple states displays the selected" name="When I open the browser" time="0"/>
  <testcase classname="Scenario: A request with multiple states displays the selected" name="And I add the states below to the request &quot;numbers&quot;" time="0"/>
  <testcase classname="Scenario: A request with multiple states displays the selected" name="And I make a /viewRequests request" time="0"/>
  <testcase classname="Scenario: A request with multiple states displays the selected" name="And I click state &quot;3&quot; in the viewRequests overview" time="0"/>
  <testcase classname="Scenario: A request with multiple states displays the selected" name="Then &quot;three&quot; is displayed" time="0">
    <failure message="expected:&lt;[thre]e&gt; but was:&lt;[on]e&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[thre]e&gt; but was:&lt;[on]e&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.SeleniumStepDef.is_displayed(SeleniumStepDef.java:151)
	at âœ½.Then &quot;three&quot; is displayed(se/iths/testGUI/ViewRequests.feature:66)
</failure>
  </testcase>
  <testcase classname="Scenario: A request with multiple states displays the selected" name="Scenario: A request with multiple states displays the selected" time="0">
    <failure message="expected:&lt;[thre]e&gt; but was:&lt;[on]e&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: expected:&lt;[thre]e&gt; but was:&lt;[on]e&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at se.iths.stepDefs.SeleniumStepDef.is_displayed(SeleniumStepDef.java:151)
	at âœ½.Then &quot;three&quot; is displayed(se/iths/testGUI/ViewRequests.feature:66)
</failure>
  </testcase>
  <testcase classname="Scenario: A request with multiple states displays the selected" name="And the browser is closed" time="0">
    <skipped/>
  </testcase>
</testsuite>